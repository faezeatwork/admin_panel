{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewColorService, updateColorService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== üìçinitialValues =====================\nexport const initialValues = {\n  title: \"\",\n  code: \"#fffff\"\n};\n\n//====================== üìçonSubmit ===========================\nexport const onSubmit = async (values, actions, colorToEdit, setData, setColorPickerValue) => {\n  if (colorToEdit) {\n    const res = await updateColorService(colorToEdit, colorToEdit.id);\n  } else {\n    const res = await createNewColorService(values);\n    if (res.status == 201) {\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!...\", res.data.message, \"success\");\n      setData(oldData => [...oldData, res.data.data]);\n      setColorPickerValue(\"#000\");\n      actions.resetForm();\n    }\n  }\n};\n\n//====================== üìçvalidationSchema ===================\nexport const validationSchema = Yup.object({});","map":{"version":3,"names":["Yup","createNewColorService","updateColorService","swal","initialValues","title","code","onSubmit","values","actions","colorToEdit","setData","setColorPickerValue","res","id","status","data","message","oldData","resetForm","validationSchema","object"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/colour/FormikHelper_colour.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport { createNewColorService, updateColorService } from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== üìçinitialValues =====================\r\nexport const initialValues = {\r\n  title: \"\",\r\n  code: \"#fffff\",\r\n};\r\n\r\n//====================== üìçonSubmit ===========================\r\nexport const onSubmit = async (\r\n  values,\r\n  actions,\r\n  colorToEdit,\r\n  setData,\r\n  setColorPickerValue\r\n) => {\r\n  if (colorToEdit) {\r\n    const res =await updateColorService(colorToEdit ,colorToEdit.id)\r\n   \r\n  } else {\r\n    const res = await createNewColorService(values);\r\n    if (res.status == 201) {\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!...\", res.data.message, \"success\");\r\n      setData((oldData) => [...oldData, res.data.data]);\r\n      setColorPickerValue(\"#000\");\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n\r\n//====================== üìçvalidationSchema ===================\r\nexport const validationSchema = Yup.object({});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAASC,qBAAqB,EAAEC,kBAAkB,QAAQ,wCAAwC;AAClG,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,MAAM,EACNC,OAAO,EACPC,WAAW,EACXC,OAAO,EACPC,mBAAmB,KAChB;EACH,IAAIF,WAAW,EAAE;IACf,MAAMG,GAAG,GAAE,MAAMX,kBAAkB,CAACQ,WAAW,EAAEA,WAAW,CAACI,EAAE,CAAC;EAElE,CAAC,MAAM;IACL,MAAMD,GAAG,GAAG,MAAMZ,qBAAqB,CAACO,MAAM,CAAC;IAC/C,IAAIK,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBZ,IAAI,CAAC,YAAY,EAAEU,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAC/CN,OAAO,CAAEO,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAEL,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC;MACjDJ,mBAAmB,CAAC,MAAM,CAAC;MAC3BH,OAAO,CAACU,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGpB,GAAG,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}