{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewBrandService, updateBrandService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\nimport { useEffect } from \"react\";\n\n//====================== 📍initialValues =====================\nexport const initialValues = {\n  original_name: \"\",\n  persian_name: \"\",\n  descriptions: \"\",\n  logo: null\n};\n\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (data, actions, tableData, setTableData, brandToEdit, setBrandToEdit) => {\n  if (brandToEdit) {\n    const res = await updateBrandService(brandToEdit.id, data);\n    if (res.status == 200) {\n      swal(\"اعمال شد\", res.data.message, \"success\");\n      setTableData(lastData => {\n        let newData = [...lastData];\n        let index = newData.findIndex(d => d.id == brandToEdit.id);\n        newData[index] = res.data.data;\n        return newData;\n      });\n      setBrandToEdit();\n      actions.resetForm();\n    } else {\n      actions.resetForm();\n    }\n  } else {\n    const res = await createNewBrandService(data);\n    if (res.status == 201) {\n      swal(\"ثبت شد\", res.data.message, \"success\");\n      setTableData([...tableData, res.data.data]);\n      actions.resetForm();\n    } else {\n      actions.resetForm();\n    }\n  }\n};\n\n//====================== 📍validationSchema ===================\nexport const validationSchema = Yup.object({\n  original_name: Yup.string().required(\"لطفا این قسمت را پر کنید\").matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"فقط از اعداد و حروف لاتین استفاده شود\"),\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\sa-zA-Z0-9@!%$?&]+$/, \"فقط از اعداد و حروف استفاده شود\"),\n  descriptions: Yup.string().matches(/^[\\u0600-\\u06FF\\sa-zA-Z0-9@!%$?&]+$/, \"فقط از اعداد و حروف استفاده شود\"),\n  logo: Yup.mixed().test(\"filesize\", \"حجم فایل نمیتواند بیشتر 500 کیلوبایت باشد\", value => !value ? true : value.size <= 500 * 1024).test(\"format\", \"فرمت فایل باید jpg باشد\", value => !value ? true : value.type === \"image/jpeg\" || value.type === \"image/png\").nullable()\n});","map":{"version":3,"names":["Yup","createNewBrandService","updateBrandService","swal","useEffect","initialValues","original_name","persian_name","descriptions","logo","onSubmit","data","actions","tableData","setTableData","brandToEdit","setBrandToEdit","res","id","status","message","lastData","newData","index","findIndex","d","resetForm","validationSchema","object","string","required","matches","mixed","test","value","size","type","nullable"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/brand/FormikHelper_brands.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewBrandService,\r\n  updateBrandService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\nimport { useEffect } from \"react\";\r\n\r\n//====================== 📍initialValues =====================\r\nexport const initialValues = {\r\n  original_name: \"\",\r\n  persian_name: \"\",\r\n  descriptions: \"\",\r\n  logo: null,\r\n};\r\n\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (\r\n  data,\r\n  actions,\r\n  tableData,\r\n  setTableData,\r\n  brandToEdit,\r\n  setBrandToEdit,\r\n\r\n) => {\r\n  if (brandToEdit) {\r\n    const res = await updateBrandService(brandToEdit.id,  data);\r\n    if (res.status == 200) {\r\n      swal(\"اعمال شد\", res.data.message, \"success\");\r\n      setTableData((lastData) => {\r\n        let newData = [...lastData];\r\n        let index = newData.findIndex((d) => d.id == brandToEdit.id);\r\n        newData[index] = res.data.data;\r\n        return newData;\r\n      });\r\n      setBrandToEdit()\r\n      actions.resetForm();\r\n    } else {\r\n      actions.resetForm();\r\n    }\r\n  } else {\r\n    const res = await createNewBrandService(data);\r\n    if (res.status == 201) {\r\n      swal(\"ثبت شد\", res.data.message, \"success\");\r\n      setTableData([...tableData, res.data.data]);\r\n      actions.resetForm();\r\n    } else {\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n\r\n//====================== 📍validationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  original_name: Yup.string()\r\n    .required(\"لطفا این قسمت را پر کنید\")\r\n    .matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"فقط از اعداد و حروف لاتین استفاده شود\"),\r\n  persian_name: Yup.string().matches(\r\n    /^[\\u0600-\\u06FF\\sa-zA-Z0-9@!%$?&]+$/,\r\n    \"فقط از اعداد و حروف استفاده شود\"\r\n  ),\r\n  descriptions: Yup.string().matches(\r\n    /^[\\u0600-\\u06FF\\sa-zA-Z0-9@!%$?&]+$/,\r\n    \"فقط از اعداد و حروف استفاده شود\"\r\n  ),\r\n  logo: Yup.mixed()\r\n    .test(\"filesize\", \"حجم فایل نمیتواند بیشتر 500 کیلوبایت باشد\", (value) =>\r\n      !value ? true : value.size <= 500 * 1024\r\n    )\r\n    .test(\"format\", \"فرمت فایل باید jpg باشد\", (value) =>\r\n      !value ? true : value.type === \"image/jpeg\" || value.type === \"image/png\"\r\n    )\r\n    .nullable(),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,qBAAqB,EACrBC,kBAAkB,QACb,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,cAAc,KAEX;EACH,IAAID,WAAW,EAAE;IACf,MAAME,GAAG,GAAG,MAAMf,kBAAkB,CAACa,WAAW,CAACG,EAAE,EAAGP,IAAI,CAAC;IAC3D,IAAIM,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBhB,IAAI,CAAC,UAAU,EAAEc,GAAG,CAACN,IAAI,CAACS,OAAO,EAAE,SAAS,CAAC;MAC7CN,YAAY,CAAEO,QAAQ,IAAK;QACzB,IAAIC,OAAO,GAAG,CAAC,GAAGD,QAAQ,CAAC;QAC3B,IAAIE,KAAK,GAAGD,OAAO,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,IAAIH,WAAW,CAACG,EAAE,CAAC;QAC5DI,OAAO,CAACC,KAAK,CAAC,GAAGN,GAAG,CAACN,IAAI,CAACA,IAAI;QAC9B,OAAOW,OAAO;MAChB,CAAC,CAAC;MACFN,cAAc,CAAC,CAAC;MAChBJ,OAAO,CAACc,SAAS,CAAC,CAAC;IACrB,CAAC,MAAM;MACLd,OAAO,CAACc,SAAS,CAAC,CAAC;IACrB;EACF,CAAC,MAAM;IACL,MAAMT,GAAG,GAAG,MAAMhB,qBAAqB,CAACU,IAAI,CAAC;IAC7C,IAAIM,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBhB,IAAI,CAAC,QAAQ,EAAEc,GAAG,CAACN,IAAI,CAACS,OAAO,EAAE,SAAS,CAAC;MAC3CN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,GAAG,CAACN,IAAI,CAACA,IAAI,CAAC,CAAC;MAC3CC,OAAO,CAACc,SAAS,CAAC,CAAC;IACrB,CAAC,MAAM;MACLd,OAAO,CAACc,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG3B,GAAG,CAAC4B,MAAM,CAAC;EACzCtB,aAAa,EAAEN,GAAG,CAAC6B,MAAM,CAAC,CAAC,CACxBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,OAAO,CAAC,wBAAwB,EAAE,uCAAuC,CAAC;EAC7ExB,YAAY,EAAEP,GAAG,CAAC6B,MAAM,CAAC,CAAC,CAACE,OAAO,CAChC,qCAAqC,EACrC,iCACF,CAAC;EACDvB,YAAY,EAAER,GAAG,CAAC6B,MAAM,CAAC,CAAC,CAACE,OAAO,CAChC,qCAAqC,EACrC,iCACF,CAAC;EACDtB,IAAI,EAAET,GAAG,CAACgC,KAAK,CAAC,CAAC,CACdC,IAAI,CAAC,UAAU,EAAE,2CAA2C,EAAGC,KAAK,IACnE,CAACA,KAAK,GAAG,IAAI,GAAGA,KAAK,CAACC,IAAI,IAAI,GAAG,GAAG,IACtC,CAAC,CACAF,IAAI,CAAC,QAAQ,EAAE,yBAAyB,EAAGC,KAAK,IAC/C,CAACA,KAAK,GAAG,IAAI,GAAGA,KAAK,CAACE,IAAI,KAAK,YAAY,IAAIF,KAAK,CAACE,IAAI,KAAK,WAChE,CAAC,CACAC,QAAQ,CAAC;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}