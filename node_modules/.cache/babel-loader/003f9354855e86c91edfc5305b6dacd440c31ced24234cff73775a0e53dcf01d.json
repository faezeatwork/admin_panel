{"ast":null,"code":"import { httpService } from \"./httpService\";\nexport const loginService = values => {\n  return httpService(\"auth/login\", \"post\", {\n    ...values,\n    remember: values.remember ? 1 : 0\n  });\n};\nexport const registerService = () => {\n  return httpService(\"auth/register\", \"post\");\n};\nexport const getUserService = loginToken => {\n  return httpService(\"auth/user\", \"get\", \"\", {\n    headers: {\n      Authorization: `Bearer ${loginToken.token}`\n    }\n  });\n};\nexport const isLoginService = async (loading, isLogin) => {\n  const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\n  if (loginToken) {\n    const res = await httpService(\"auth/user\", \"get\", {\n      headers: {\n        Authorization: `Bearer ${loginToken.token}`\n      }\n    });\n    try {\n      console.log(\"try\");\n      setIsLogin(res.status == 200 ? true : false);\n      setLoading(false);\n    } catch (error) {\n      console.log(\"catch\");\n      localStorage.removeItem(\"loginToken\");\n      setIsLogin(false);\n      setLoading(false);\n    }\n  } else {\n    setIsLogin(false);\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["httpService","loginService","values","remember","registerService","getUserService","loginToken","headers","Authorization","token","isLoginService","loading","isLogin","JSON","parse","localStorage","getItem","res","console","log","setIsLogin","status","setLoading","error","removeItem"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/services/authServices.js"],"sourcesContent":["import { httpService } from \"./httpService\";\r\n\r\nexport const loginService = (values) => {\r\n  return httpService(\"auth/login\", \"post\", {\r\n    ...values,\r\n    remember: values.remember ? 1 : 0,\r\n  });\r\n};\r\n\r\nexport const registerService = () => {\r\n  return httpService(\"auth/register\", \"post\");\r\n};\r\n\r\nexport const getUserService = (loginToken) => {\r\n  return httpService(\"auth/user\", \"get\", \"\", {\r\n    headers: {\r\n      Authorization: `Bearer ${loginToken.token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const isLoginService = async (loading, isLogin) => {\r\n  const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\r\n  if (loginToken) {\r\n    const res = await httpService(\"auth/user\", \"get\", {\r\n      headers: {\r\n        Authorization: `Bearer ${loginToken.token}`,\r\n      },\r\n    });\r\n    try {\r\n      console.log(\"try\");\r\n      setIsLogin(res.status == 200 ? true : false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"catch\");\r\n      localStorage.removeItem(\"loginToken\");\r\n      setIsLogin(false);\r\n      setLoading(false);\r\n    }\r\n  } else {\r\n    setIsLogin(false);\r\n    setLoading(false);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,eAAe;AAE3C,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAK;EACtC,OAAOF,WAAW,CAAC,YAAY,EAAE,MAAM,EAAE;IACvC,GAAGE,MAAM;IACTC,QAAQ,EAAED,MAAM,CAACC,QAAQ,GAAG,CAAC,GAAG;EAClC,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOJ,WAAW,CAAC,eAAe,EAAE,MAAM,CAAC;AAC7C,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,UAAU,IAAK;EAC5C,OAAON,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE;IACzCO,OAAO,EAAE;MACPC,aAAa,EAAG,UAASF,UAAU,CAACG,KAAM;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,OAAO,EAAEC,OAAO,KAAK;EACxD,MAAMN,UAAU,GAAGO,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;EACjE,IAAIV,UAAU,EAAE;IACd,MAAMW,GAAG,GAAG,MAAMjB,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE;MAChDO,OAAO,EAAE;QACPC,aAAa,EAAG,UAASF,UAAU,CAACG,KAAM;MAC5C;IACF,CAAC,CAAC;IACF,IAAI;MACFS,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;MAClBC,UAAU,CAACH,GAAG,CAACI,MAAM,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC;MAC5CC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBJ,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC;MACrCJ,UAAU,CAAC,KAAK,CAAC;MACjBE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,MAAM;IACLF,UAAU,CAAC,KAAK,CAAC;IACjBE,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}