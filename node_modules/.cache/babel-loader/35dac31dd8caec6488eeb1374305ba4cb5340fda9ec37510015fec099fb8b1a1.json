{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewAttrForProductService, getAttributesService } from \"../../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//============= گرفتن تایپ ویژگی ها از محصول والد =============\nexport const handleGetTypeOfAtt = async (location, setTypeAtt, setInitialValues, setValidationSchema) => {\n  let attrVar = [];\n  let initials = {};\n  let rules = {};\n  let pivots = location.state.rowData.attributes.map(attr => attr.pivot);\n  const values = pivots.map(p => {\n    return {\n      id: p.property_id,\n      value: p.value\n    };\n  });\n  console.log(values);\n  Promise.all(location.state.rowData.categories.map(async cat => {\n    const res = await getAttributesService(cat.id);\n    if (res.status == 200) {\n      attrVar = [...attrVar, {\n        groupTitle: cat.title,\n        data: res.data.data\n      }];\n      if (res.data.data.length > 0) {\n        for (const d of res.data.data) {\n          const reInitialValue = values.filter(v => v.id == d.id);\n          initials = {\n            ...initials,\n            [d.id]: reInitialValue[0].value || \"\"\n          };\n          rules = {\n            ...rules,\n            [d.id]: Yup.string()\n          };\n        }\n      }\n    }\n  })).then(() => {\n    setTypeAtt(attrVar);\n    setInitialValues(initials);\n    setValidationSchema(Object.keys(initials).length > 0 ? Yup.object(rules) : {});\n  });\n};\n//چون مقدار اولیه ها و\n//validationSchema\n//در این صفحه متغیر است\n// برای همین به این شکل\n// نوشته شده است\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (Id_product, values, action) => {\n  let data = {};\n  for (const key in values) {\n    if (values[key]) data = {\n      ...data,\n      [key]: {\n        value: values[key]\n      }\n    };\n  }\n  const res = await createNewAttrForProductService(Id_product, data);\n  if (res.status == 200) {\n    swal(\"ثبت شد!\", res.data.message, \"success\");\n  }\n};","map":{"version":3,"names":["Yup","createNewAttrForProductService","getAttributesService","swal","handleGetTypeOfAtt","location","setTypeAtt","setInitialValues","setValidationSchema","attrVar","initials","rules","pivots","state","rowData","attributes","map","attr","pivot","values","p","id","property_id","value","console","log","Promise","all","categories","cat","res","status","groupTitle","title","data","length","d","reInitialValue","filter","v","string","then","Object","keys","object","onSubmit","Id_product","action","key","message"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/2-product/table_addition/FormikHelper_AddAtt_products.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewAttrForProductService,\r\n  getAttributesService,\r\n} from \"../../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//============= گرفتن تایپ ویژگی ها از محصول والد =============\r\nexport const handleGetTypeOfAtt = async (\r\n  location,\r\n  setTypeAtt,\r\n  setInitialValues,\r\n  setValidationSchema\r\n) => {\r\n  let attrVar = [];\r\n  let initials = {};\r\n  let rules = {};\r\n  let pivots = location.state.rowData.attributes.map((attr) => attr.pivot);\r\n\r\n  const values = pivots.map((p) => {\r\n    return { id: p.property_id, value: p.value };\r\n  });\r\n  console.log(values);\r\n  Promise.all(\r\n    location.state.rowData.categories.map(async (cat) => {\r\n      const res = await getAttributesService(cat.id);\r\n      if (res.status == 200) {\r\n        attrVar = [...attrVar, { groupTitle: cat.title, data: res.data.data }];\r\n        if (res.data.data.length > 0) {\r\n          for (const d of res.data.data) {\r\n            const reInitialValue = values.filter((v) => v.id == d.id);\r\n\r\n            initials = {\r\n              ...initials,\r\n              [d.id]: reInitialValue[0].value || \"\",\r\n            };\r\n            rules = { ...rules, [d.id]: Yup.string() };\r\n          }\r\n        }\r\n      }\r\n    })\r\n  ).then(() => {\r\n    setTypeAtt(attrVar);\r\n    setInitialValues(initials);\r\n\r\n    setValidationSchema(\r\n      Object.keys(initials).length > 0 ? Yup.object(rules) : {}\r\n    );\r\n  });\r\n};\r\n//چون مقدار اولیه ها و\r\n//validationSchema\r\n//در این صفحه متغیر است\r\n// برای همین به این شکل\r\n// نوشته شده است\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (Id_product, values, action) => {\r\n  let data = {};\r\n  for (const key in values) {\r\n    if (values[key]) data = { ...data, [key]: { value: values[key] } };\r\n  }\r\n  const res = await createNewAttrForProductService(Id_product, data);\r\n\r\n  if (res.status == 200) {\r\n    swal(\"ثبت شد!\", res.data.message, \"success\");\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}