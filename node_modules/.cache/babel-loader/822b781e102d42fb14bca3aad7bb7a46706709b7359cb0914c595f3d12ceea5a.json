{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f.alizadeh\\\\Desktop\\\\alizadeh\\\\admin_panel\\\\src\\\\components\\\\general_compo\\\\reusable_table\\\\reusable_table1\\\\Reusable_table.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { PrevPageBtn } from \"../../reusable_operations/PrevPageBtn\";\nimport { Pagination } from \"./Pagination\";\nimport { SearchBox } from \"../../reusable_operations/SearchBox\";\nimport { AddItem_btn } from \"../../add_or_edit_product/AddItem_btn\";\nimport { Table } from \"../reusable_table1/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numOfRows_singlePage = 5; //در هر صفحه چند ردیف از حدول نمایش داده شود\n\nexport const Reusable_table = props => {\n  _s();\n  var _location$state$paren;\n  const location = useLocation();\n  //🏮👉 اشonClick :از این هوک اینجا استفاده شده in Operations_product\n\n  const {\n    nameOfColumn,\n    // اسم هر کدام از ستون ها- هدرها\n    dataOfRows,\n    //کل دیتاهایی که از بک اند میگیریم\n    placeholder_searchBox,\n    go_where,\n    //this icon ➕ link to where - hamishe ham link nist\n    show_addButton,\n    show_compo,\n    show_subGroup,\n    having_searchBox,\n    additionField\n  } = props;\n  const [dataAnyPage, setDataAnyPage] = useState([]); //slice shodeye dataOfRows\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countPage, setCountPage] = useState(2); //page_count = dataOfRows.length / numOfRows_singlePage (تعداد کل صفحات)\n  const [pageArr, setPageArr] = useState([]); //[0,1,2,3,4,...,countPage]\n  const [searchData, setSearchData] = useState(dataAnyPage);\n  const [searchChar, setSearchChar] = useState(\"\");\n  useEffect(() => {\n    console.log('location');\n    console.log(location);\n  }, [location]);\n\n  //======== فیلتر کردن آیتم هایی که نمایش داده می شود برحسب سرچ ===========\n  useEffect(() => {\n    var _dataOfRows$, _dataOfRows$2;\n    (_dataOfRows$ = dataOfRows[0]) !== null && _dataOfRows$ !== void 0 && _dataOfRows$.title ? setSearchData(dataOfRows.filter(d => {\n      var _d$title;\n      return (_d$title = d.title) === null || _d$title === void 0 ? void 0 : _d$title.includes(searchChar);\n    })) : (_dataOfRows$2 = dataOfRows[0]) !== null && _dataOfRows$2 !== void 0 && _dataOfRows$2.original_name ? setSearchData(dataOfRows.filter(d => {\n      var _d$original_name;\n      return (_d$original_name = d.original_name) === null || _d$original_name === void 0 ? void 0 : _d$original_name.includes(searchChar);\n    })) : console.log(\"hint: check name of title\");\n  }, [searchChar, dataOfRows]);\n  //==================   تقسیم کردن ردیف ها بین صفحات   ======================\n  useEffect(() => {\n    //in useEffect , row ha ro be tedad page ha slice mikone\n    const start = currentPage * numOfRows_singlePage - numOfRows_singlePage;\n    const end = currentPage * numOfRows_singlePage;\n    setDataAnyPage(searchData.slice(start, end));\n  }, [currentPage, searchData]);\n\n  //==========================================================================\n\n  useEffect(() => {\n    // Math.ceil() ==> round to up number\n    const page_count = Math.ceil(searchData.length / numOfRows_singlePage);\n    setCountPage(page_count);\n    // ========================= //\n    let arrOfPages = [];\n    for (let i = 1; i <= page_count; i++) arrOfPages = [...arrOfPages, i]; //[0,1,2,3,4,...,dataOfRows.length]\n    setPageArr(arrOfPages);\n    setCurrentPage(1);\n  }, [searchData]);\n\n  //===============================  return ==================================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-1 reusable_table\",\n    children: [show_subGroup ? location.state ? /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center d-flex justify-content-center bg-danger\",\n      children: [\"\\u0632\\u06CC\\u0631 \\u06AF\\u0631\\u0648\\u0647: \", log, /*#__PURE__*/_jsxDEV(PrevPageBtn, {\n        returnTitle: (_location$state$paren = location.state.parentData) === null || _location$state$paren === void 0 ? void 0 : _location$state$paren.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this) : null : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center p-2\",\n      children: [having_searchBox ? /*#__PURE__*/_jsxDEV(SearchBox, {\n        setSearchChar: setSearchChar,\n        placeholder_searchBox: placeholder_searchBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : null, show_addButton ? /*#__PURE__*/_jsxDEV(NavLink, {\n        to: go_where,\n        children: /*#__PURE__*/_jsxDEV(AddItem_btn, {\n          show_compo: show_compo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataOfRows: dataOfRows,\n      nameOfColumn: nameOfColumn,\n      additionField: additionField,\n      dataAnyPage: dataAnyPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      countPage: countPage,\n      currentPage: currentPage,\n      setCountPage: setCountPage,\n      pageArr: pageArr,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Reusable_table, \"H04RSYlqm3K5llVe5HrYP4VxCi0=\", false, function () {\n  return [useLocation];\n});\n_c = Reusable_table;\nvar _c;\n$RefreshReg$(_c, \"Reusable_table\");","map":{"version":3,"names":["useEffect","useState","NavLink","useLocation","PrevPageBtn","Pagination","SearchBox","AddItem_btn","Table","jsxDEV","_jsxDEV","numOfRows_singlePage","Reusable_table","props","_s","_location$state$paren","location","nameOfColumn","dataOfRows","placeholder_searchBox","go_where","show_addButton","show_compo","show_subGroup","having_searchBox","additionField","dataAnyPage","setDataAnyPage","currentPage","setCurrentPage","countPage","setCountPage","pageArr","setPageArr","searchData","setSearchData","searchChar","setSearchChar","console","log","_dataOfRows$","_dataOfRows$2","title","filter","d","_d$title","includes","original_name","_d$original_name","start","end","slice","page_count","Math","ceil","length","arrOfPages","i","className","children","state","returnTitle","parentData","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/general_compo/reusable_table/reusable_table1/Reusable_table.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { PrevPageBtn } from \"../../reusable_operations/PrevPageBtn\";\r\nimport { Pagination } from \"./Pagination\";\r\nimport { SearchBox } from \"../../reusable_operations/SearchBox\";\r\nimport { AddItem_btn } from \"../../add_or_edit_product/AddItem_btn\";\r\nimport { Table } from \"../reusable_table1/Table\";\r\n\r\nconst numOfRows_singlePage = 5; //در هر صفحه چند ردیف از حدول نمایش داده شود\r\n\r\nexport const Reusable_table = (props) => {\r\n  const location = useLocation();\r\n  //🏮👉 اشonClick :از این هوک اینجا استفاده شده in Operations_product\r\n\r\n  const {\r\n    nameOfColumn, // اسم هر کدام از ستون ها- هدرها\r\n    dataOfRows, //کل دیتاهایی که از بک اند میگیریم\r\n    placeholder_searchBox,\r\n    go_where, //this icon ➕ link to where - hamishe ham link nist\r\n    show_addButton,\r\n    show_compo,\r\n    show_subGroup,\r\n    having_searchBox,\r\n    additionField,\r\n  } = props;\r\n\r\n  const [dataAnyPage, setDataAnyPage] = useState([]); //slice shodeye dataOfRows\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [countPage, setCountPage] = useState(2); //page_count = dataOfRows.length / numOfRows_singlePage (تعداد کل صفحات)\r\n  const [pageArr, setPageArr] = useState([]); //[0,1,2,3,4,...,countPage]\r\n  const [searchData, setSearchData] = useState(dataAnyPage);\r\n  const [searchChar, setSearchChar] = useState(\"\");\r\n\r\n\r\nuseEffect(()=>{\r\n  console.log('location');\r\n  console.log(location);\r\n},[location])\r\n\r\n\r\n  //======== فیلتر کردن آیتم هایی که نمایش داده می شود برحسب سرچ ===========\r\n  useEffect(() => {\r\n    dataOfRows[0]?.title\r\n      ? setSearchData(dataOfRows.filter((d) => d.title?.includes(searchChar)))\r\n      : dataOfRows[0]?.original_name\r\n      ? setSearchData(\r\n          dataOfRows.filter((d) => d.original_name?.includes(searchChar))\r\n        )\r\n      : console.log(\"hint: check name of title\");\r\n  }, [searchChar, dataOfRows]);\r\n  //==================   تقسیم کردن ردیف ها بین صفحات   ======================\r\n  useEffect(() => {\r\n    //in useEffect , row ha ro be tedad page ha slice mikone\r\n    const start = currentPage * numOfRows_singlePage - numOfRows_singlePage;\r\n    const end = currentPage * numOfRows_singlePage;\r\n    setDataAnyPage(searchData.slice(start, end));\r\n  }, [currentPage, searchData]);\r\n\r\n  //==========================================================================\r\n\r\n  useEffect(() => {\r\n    // Math.ceil() ==> round to up number\r\n    const page_count = Math.ceil(searchData.length / numOfRows_singlePage);\r\n    setCountPage(page_count);\r\n    // ========================= //\r\n    let arrOfPages = [];\r\n    for (let i = 1; i <= page_count; i++) arrOfPages = [...arrOfPages, i]; //[0,1,2,3,4,...,dataOfRows.length]\r\n    setPageArr(arrOfPages);\r\n    setCurrentPage(1);\r\n  }, [searchData]);\r\n\r\n  //===============================  return ==================================\r\n\r\n  return (\r\n    <div className=\"p-1 reusable_table\">\r\n      {show_subGroup ? (\r\n        location.state ? (\r\n          <h5 className=\"text-center d-flex justify-content-center bg-danger\">\r\n            زیر گروه: {log}\r\n            <PrevPageBtn returnTitle={location.state.parentData?.title} />\r\n          </h5>\r\n        ) : null\r\n      ) : null}\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center p-2\">\r\n        {/* ================== 🔍 start searchBox👇 ================== */}\r\n        {having_searchBox ? (\r\n          <SearchBox\r\n            setSearchChar={setSearchChar}\r\n            placeholder_searchBox={placeholder_searchBox}\r\n          />\r\n        ) : null}\r\n\r\n        {/* ================== 🔍 end searchBox👆 ==================== */}\r\n\r\n        {/* ================== ➕ start show_addButton👇 ================== */}\r\n        {/* in icon ➕  */}\r\n        {show_addButton ? (\r\n          <NavLink to={go_where}>\r\n            <AddItem_btn show_compo={show_compo} />\r\n          </NavLink>\r\n        ) : null}\r\n      {/* ================== ➕ end show_addButton👆 ==================== */}\r\n      </div>\r\n\r\n      {/* ================== start table👇 ====================== */}\r\n      <Table\r\n        dataOfRows={dataOfRows}\r\n        nameOfColumn={nameOfColumn}\r\n        additionField={additionField}\r\n        dataAnyPage={dataAnyPage}\r\n      />\r\n      {/* ================== end table👆 ======================== */}\r\n\r\n      {/* ================== start pagination👇 ================= */}\r\n      <Pagination\r\n        countPage={countPage}\r\n        currentPage={currentPage}\r\n        setCountPage={setCountPage}\r\n        pageArr={pageArr}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      {/* ================== end pagination👆 =================== */}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}