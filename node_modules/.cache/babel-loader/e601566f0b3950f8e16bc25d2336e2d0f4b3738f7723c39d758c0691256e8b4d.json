{"ast":null,"code":"import React from \"react\";\nimport chart from 'chart.js/auto';\nexport const MainPage_chart = () => {\n  const config = {\n    type: 'polarArea',\n    data: data,\n    options: {\n      responsive: true,\n      scales: {\n        r: {\n          pointLabels: {\n            display: true,\n            centerPointLabels: true,\n            font: {\n              size: 18\n            }\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Chart.js Polar Area Chart With Centered Point Labels'\n        }\n      }\n    }\n  };\n  const DATA_COUNT = 5;\n  const NUMBER_CFG = {\n    count: DATA_COUNT,\n    min: 0,\n    max: 100\n  };\n  const labels = ['Red', 'Orange', 'Yellow', 'Green', 'Blue'];\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: [Utils.transparentize(Utils.CHART_COLORS.red, 0.5), Utils.transparentize(Utils.CHART_COLORS.orange, 0.5), Utils.transparentize(Utils.CHART_COLORS.yellow, 0.5), Utils.transparentize(Utils.CHART_COLORS.green, 0.5), Utils.transparentize(Utils.CHART_COLORS.blue, 0.5)]\n    }]\n  };\n  const actions = [{\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset => {\n        dataset.data = Utils.numbers({\n          count: chart.data.labels.length,\n          min: 0,\n          max: 100\n        });\n      });\n      chart.update();\n    }\n  }, {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length > 0) {\n        data.labels.push('data #' + (data.labels.length + 1));\n        for (let index = 0; index < data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.rand(0, 100));\n        }\n        chart.update();\n      }\n    }\n  }, {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.pop();\n      });\n      chart.update();\n    }\n  }];\n};\n_c = MainPage_chart;\nvar _c;\n$RefreshReg$(_c, \"MainPage_chart\");","map":{"version":3,"names":["React","chart","MainPage_chart","config","type","data","options","responsive","scales","r","pointLabels","display","centerPointLabels","font","size","plugins","legend","position","title","text","DATA_COUNT","NUMBER_CFG","count","min","max","labels","datasets","label","Utils","numbers","backgroundColor","transparentize","CHART_COLORS","red","orange","yellow","green","blue","actions","name","handler","forEach","dataset","length","update","push","index","rand","splice","pop","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/components/pages/main_page/MainPage_chart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport chart from 'chart.js/auto'\r\nexport const MainPage_chart = () => {\r\n\r\n  const config = {\r\n    type: 'polarArea',\r\n    data: data,\r\n    options: {\r\n      responsive: true,\r\n      scales: {\r\n        r: {\r\n          pointLabels: {\r\n            display: true,\r\n            centerPointLabels: true,\r\n            font: {\r\n              size: 18\r\n            }\r\n          }\r\n        }\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Chart.js Polar Area Chart With Centered Point Labels'\r\n        }\r\n      }\r\n    },\r\n  };\r\n\r\n  const DATA_COUNT = 5;\r\n  const NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\r\n  \r\n  const labels = ['Red', 'Orange', 'Yellow', 'Green', 'Blue'];\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Dataset 1',\r\n        data: Utils.numbers(NUMBER_CFG),\r\n        backgroundColor: [\r\n          Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\r\n          Utils.transparentize(Utils.CHART_COLORS.orange, 0.5),\r\n          Utils.transparentize(Utils.CHART_COLORS.yellow, 0.5),\r\n          Utils.transparentize(Utils.CHART_COLORS.green, 0.5),\r\n          Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n  \r\n  const actions = [\r\n    {\r\n      name: 'Randomize',\r\n      handler(chart) {\r\n        chart.data.datasets.forEach(dataset => {\r\n          dataset.data = Utils.numbers({count: chart.data.labels.length, min: 0, max: 100});\r\n        });\r\n        chart.update();\r\n      }\r\n    },\r\n    {\r\n      name: 'Add Data',\r\n      handler(chart) {\r\n        const data = chart.data;\r\n        if (data.datasets.length > 0) {\r\n          data.labels.push('data #' + (data.labels.length + 1));\r\n  \r\n          for (let index = 0; index < data.datasets.length; ++index) {\r\n            data.datasets[index].data.push(Utils.rand(0, 100));\r\n          }\r\n  \r\n          chart.update();\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: 'Remove Data',\r\n      handler(chart) {\r\n        chart.data.labels.splice(-1, 1); // remove the label first\r\n  \r\n        chart.data.datasets.forEach(dataset => {\r\n          dataset.data.pop();\r\n        });\r\n  \r\n        chart.update();\r\n      }\r\n    }\r\n  ];\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}