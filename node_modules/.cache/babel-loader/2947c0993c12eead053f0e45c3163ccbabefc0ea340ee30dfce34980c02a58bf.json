{"ast":null,"code":"import swal from \"sweetalert\";\nimport * as Yup from \"yup\";\nexport const initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  phone: \"\",\n  confirmPassword: \"\",\n  auth_mode: \"email\",\n  booleanTest: true,\n  birthday_date: \"\",\n  choose_file: \"\"\n};\nexport const validationSchema = Yup.object({\n  // firstName: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // lastName: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // username: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // email: Yup.string().when(\"auth_mode\", {\n  //   is: \"email\",\n  //   then: () =>\n  //     Yup.string().email(\"Invalid email address\").required(\"It is required\"),\n  // }),\n\n  // phone: Yup.number().when(\"auth_mode\", {\n  //   is: \"phone\",\n  //   then: () => Yup.number().required(\"It is required\"),\n  // }),\n\n  // password: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(\n  //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{4,})/,\n  //     \"For example: XPp1@c5\"\n  //   ),\n\n  // confirmPassword: Yup.string()\n  //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  //   .required(\"It is required\"),\n\n  date_of_birth: Yup.string().required(\"It is required\"),\n  choose_file: Yup.mixed().required(\"It is required\")\n});\nexport const onSubmit = value => {\n  const result = {\n    submit: \"Done\",\n    value: {\n      value\n    }\n  };\n  console.log(result);\n  console.log(\"Registration was successful\");\n  swal(\"\", \"Your registration was successful!\", \"success\");\n};","map":{"version":3,"names":["swal","Yup","initialValues","firstName","lastName","username","email","password","phone","confirmPassword","auth_mode","booleanTest","birthday_date","choose_file","validationSchema","object","date_of_birth","string","required","mixed","onSubmit","value","result","submit","console","log"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/components/formikAttribute.js"],"sourcesContent":["import swal from \"sweetalert\";\nimport * as Yup from \"yup\";\n\nexport const initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  phone: \"\",\n  confirmPassword: \"\",\n  auth_mode: \"email\",\n  booleanTest: true,\n  birthday_date: \"\",\n  choose_file: \"\",\n};\n\nexport const validationSchema = Yup.object({\n  // firstName: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // lastName: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // username: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(/^[a-z ,.'-]+$/i, \"Use only letters\"),\n\n  // email: Yup.string().when(\"auth_mode\", {\n  //   is: \"email\",\n  //   then: () =>\n  //     Yup.string().email(\"Invalid email address\").required(\"It is required\"),\n  // }),\n\n  // phone: Yup.number().when(\"auth_mode\", {\n  //   is: \"phone\",\n  //   then: () => Yup.number().required(\"It is required\"),\n  // }),\n\n  // password: Yup.string()\n  //   .required(\"It is required\")\n  //   .matches(\n  //     /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{4,})/,\n  //     \"For example: XPp1@c5\"\n  //   ),\n\n  // confirmPassword: Yup.string()\n  //   .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n  //   .required(\"It is required\"),\n\n  date_of_birth: Yup.string().required(\"It is required\"),\n\n  choose_file: Yup.mixed().required(\"It is required\"),\n});\n\nexport const onSubmit = (value) => {\n  const result = { submit: \"Done\", value: { value } };\n  console.log(result);\n  console.log(\"Registration was successful\");\n  swal(\"\", \"Your registration was successful!\", \"success\");\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,aAAa,GAAG;EAC3BC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,eAAe,EAAE,EAAE;EACnBC,SAAS,EAAE,OAAO;EAClBC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGb,GAAG,CAACc,MAAM,CAAC;EACzC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEAC,aAAa,EAAEf,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,gBAAgB,CAAC;EAEtDL,WAAW,EAAEZ,GAAG,CAACkB,KAAK,CAAC,CAAC,CAACD,QAAQ,CAAC,gBAAgB;AACpD,CAAC,CAAC;AAEF,OAAO,MAAME,QAAQ,GAAIC,KAAK,IAAK;EACjC,MAAMC,MAAM,GAAG;IAAEC,MAAM,EAAE,MAAM;IAAEF,KAAK,EAAE;MAAEA;IAAM;EAAE,CAAC;EACnDG,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnBE,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1CzB,IAAI,CAAC,EAAE,EAAE,mCAAmC,EAAE,SAAS,CAAC;AAC1D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}