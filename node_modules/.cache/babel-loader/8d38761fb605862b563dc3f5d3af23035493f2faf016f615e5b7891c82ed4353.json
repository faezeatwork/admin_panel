{"ast":null,"code":"//با این فایل متدها رو مدیریت می کنیم\n\nimport axios from \"axios\";\nimport config from \"./config.json\";\nimport swal from \"sweetalert\";\naxios.interceptors.response.use(res => {\n  if (res.status != 200 && res.status != 201) {\n    swal(\"متاسفم!...\", res.data.message, \"warning\");\n    console.log(res.data.title);\n    console.log(res.data.message);\n  }\n  return res;\n}, error => {\n  swal(\"خطا!...\", \"مشکلی رخ داده است\", \"error\");\n  return Promise.reject(error);\n});\nexport const httpService = (url, method, data = null) => {\n  console.log('test');\n  const tokenInfo = JSON.parse(localStorage.getItem(\"loginToken\"));\n  return axios({\n    url: config.onlineApi + url,\n    method,\n    data,\n    headers: {\n      Authorization: tokenInfo ? `Bearer ${tokenInfo.token}` : null,\n      \"content-Type\": \"application/json\" //باشه json میگه اون محتوایی که می خواهی ارسال کنی به شکل\n    }\n  });\n};\n\n//میکنه reusable رو axios این فایل فقط","map":{"version":3,"names":["axios","config","swal","interceptors","response","use","res","status","data","message","console","log","title","error","Promise","reject","httpService","url","method","tokenInfo","JSON","parse","localStorage","getItem","onlineApi","headers","Authorization","token"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/services/httpService.js"],"sourcesContent":["//با این فایل متدها رو مدیریت می کنیم\r\n\r\nimport axios from \"axios\";\r\nimport config from \"./config.json\";\r\nimport swal from \"sweetalert\";\r\n\r\naxios.interceptors.response.use(\r\n  (res) => {\r\n    if (res.status != 200 && res.status != 201) {\r\n      swal(\"متاسفم!...\", res.data.message, \"warning\");\r\n      console.log(res.data.title);\r\n      console.log(res.data.message);\r\n    }\r\n\r\n    return res;\r\n  },\r\n  (error) => {\r\n    swal(\"خطا!...\", \"مشکلی رخ داده است\", \"error\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const httpService = (url, method, data = null) => {\r\n  console.log('test');\r\n  const tokenInfo = JSON.parse(localStorage.getItem(\"loginToken\"));\r\n  return axios({\r\n    url: config.onlineApi + url,\r\n    method,\r\n    data,\r\n    headers: {\r\n      Authorization: tokenInfo ? `Bearer ${tokenInfo.token}` : null,\r\n      \"content-Type\": \"application/json\", //باشه json میگه اون محتوایی که می خواهی ارسال کنی به شکل\r\n    },\r\n  });\r\n};\r\n\r\n//میکنه reusable رو axios این فایل فقط\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,IAAI,MAAM,YAAY;AAE7BF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BC,GAAG,IAAK;EACP,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,IAAID,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;IAC1CL,IAAI,CAAC,YAAY,EAAEI,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,IAAI,CAACI,KAAK,CAAC;IAC3BF,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;EAC/B;EAEA,OAAOH,GAAG;AACZ,CAAC,EACAO,KAAK,IAAK;EACTX,IAAI,CAAC,SAAS,EAAE,mBAAmB,EAAE,OAAO,CAAC;EAC7C,OAAOY,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEV,IAAI,GAAG,IAAI,KAAK;EACvDE,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;EAChE,OAAOvB,KAAK,CAAC;IACXiB,GAAG,EAAEhB,MAAM,CAACuB,SAAS,GAAGP,GAAG;IAC3BC,MAAM;IACNV,IAAI;IACJiB,OAAO,EAAE;MACPC,aAAa,EAAEP,SAAS,GAAI,UAASA,SAAS,CAACQ,KAAM,EAAC,GAAG,IAAI;MAC7D,cAAc,EAAE,kBAAkB,CAAE;IACtC;EACF,CAAC,CAAC;AACJ,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}