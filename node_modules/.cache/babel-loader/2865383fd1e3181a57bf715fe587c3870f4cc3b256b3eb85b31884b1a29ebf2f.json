{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewBrandService, updateBrandService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\nimport { useEffect } from \"react\";\n\n//====================== üìçinitialValues =====================\nexport const initialValues = {\n  original_name: \"\",\n  persian_name: \"\",\n  descriptions: \"\",\n  logo: null\n};\n\n//====================== üìçonSubmit ===========================\nexport const onSubmit = async (data, actions, tableData, setTableData, brandToEdit, brandId) => {\n  if (brandToEdit !== null && brandToEdit !== void 0 && brandToEdit.id) {\n    console.log(brandToEdit);\n    const res = updateBrandService(brandId, brandToEdit);\n    if (res.status == 200) {\n      console.log('1');\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ\", res.data.message, \"success\");\n      setTableData([...tableData, res.data.data]);\n      actions.resetForm();\n      console.log('2');\n    } else {\n      actions.resetForm();\n      console.log('3');\n    }\n  } else {\n    const res = await createNewBrandService(data);\n    if (res.status == 201) {\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ\", res.data.message, \"success\");\n      setTableData([...tableData, res.data.data]);\n      actions.resetForm();\n    } else {\n      actions.resetForm();\n    }\n  }\n};\n\n//====================== üìçvalidationSchema ===================\nexport const validationSchema = Yup.object({\n  original_name: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\").matches(/^[0-9A-Za-z]{1,}$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ÿßŸÜ⁄ØŸÑ€åÿ≥€å\"),\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ŸÅÿßÿ±ÿ≥€å\"),\n  descriptions: Yup.string().matches(/^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ Ÿà ÿßÿπÿØÿßÿØ ŸÖÿ¨ÿßÿ≤ŸÜÿØ\")\n});","map":{"version":3,"names":["Yup","createNewBrandService","updateBrandService","swal","useEffect","initialValues","original_name","persian_name","descriptions","logo","onSubmit","data","actions","tableData","setTableData","brandToEdit","brandId","id","console","log","res","status","message","resetForm","validationSchema","object","string","required","matches"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/brand/FormikHelper_brands.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewBrandService,\r\n  updateBrandService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\nimport { useEffect } from \"react\";\r\n\r\n//====================== üìçinitialValues =====================\r\nexport const initialValues = {\r\n  original_name: \"\",\r\n  persian_name: \"\",\r\n  descriptions: \"\",\r\n  logo: null,\r\n};\r\n\r\n//====================== üìçonSubmit ===========================\r\nexport const onSubmit = async (\r\n  data,\r\n  actions,\r\n  tableData,\r\n  setTableData,\r\n  brandToEdit,\r\n  brandId\r\n) => {\r\n\r\n\r\n  if (brandToEdit?.id) {\r\n    console.log(brandToEdit);\r\n    const res = updateBrandService(brandId, brandToEdit);\r\n    if (res.status == 200) {\r\n      console.log('1');\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ\", res.data.message, \"success\");\r\n      setTableData([...tableData, res.data.data]);\r\n      actions.resetForm();\r\n      console.log('2');\r\n    } else {\r\n      actions.resetForm();\r\n      console.log('3');\r\n    }\r\n  } else {\r\n    const res = await createNewBrandService(data);\r\n    if (res.status == 201) {\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ\", res.data.message, \"success\");\r\n      setTableData([...tableData, res.data.data]);\r\n      actions.resetForm();\r\n    } else {\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n\r\n//====================== üìçvalidationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  original_name: Yup.string()\r\n    .required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\")\r\n    .matches(/^[0-9A-Za-z]{1,}$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ÿßŸÜ⁄ØŸÑ€åÿ≥€å\"),\r\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ŸÅÿßÿ±ÿ≥€å\"),\r\n  descriptions: Yup.string().matches(\r\n    /^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/,\r\n    \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ Ÿà ÿßÿπÿØÿßÿØ ŸÖÿ¨ÿßÿ≤ŸÜÿØ\"\r\n  ),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,qBAAqB,EACrBC,kBAAkB,QACb,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,OAAO,KACJ;EAGH,IAAID,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEE,EAAE,EAAE;IACnBC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;IACxB,MAAMK,GAAG,GAAGlB,kBAAkB,CAACc,OAAO,EAAED,WAAW,CAAC;IACpD,IAAIK,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBH,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChBhB,IAAI,CAAC,QAAQ,EAAEiB,GAAG,CAACT,IAAI,CAACW,OAAO,EAAE,SAAS,CAAC;MAC3CR,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEO,GAAG,CAACT,IAAI,CAACA,IAAI,CAAC,CAAC;MAC3CC,OAAO,CAACW,SAAS,CAAC,CAAC;MACnBL,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAClB,CAAC,MAAM;MACLP,OAAO,CAACW,SAAS,CAAC,CAAC;MACnBL,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAClB;EACF,CAAC,MAAM;IACL,MAAMC,GAAG,GAAG,MAAMnB,qBAAqB,CAACU,IAAI,CAAC;IAC7C,IAAIS,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBlB,IAAI,CAAC,QAAQ,EAAEiB,GAAG,CAACT,IAAI,CAACW,OAAO,EAAE,SAAS,CAAC;MAC3CR,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEO,GAAG,CAACT,IAAI,CAACA,IAAI,CAAC,CAAC;MAC3CC,OAAO,CAACW,SAAS,CAAC,CAAC;IACrB,CAAC,MAAM;MACLX,OAAO,CAACW,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGxB,GAAG,CAACyB,MAAM,CAAC;EACzCnB,aAAa,EAAEN,GAAG,CAAC0B,MAAM,CAAC,CAAC,CACxBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,OAAO,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;EACnDrB,YAAY,EAAEP,GAAG,CAAC0B,MAAM,CAAC,CAAC,CAACE,OAAO,CAAC,sBAAsB,EAAE,gBAAgB,CAAC;EAC5EpB,YAAY,EAAER,GAAG,CAAC0B,MAAM,CAAC,CAAC,CAACE,OAAO,CAChC,+BAA+B,EAC/B,yBACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}