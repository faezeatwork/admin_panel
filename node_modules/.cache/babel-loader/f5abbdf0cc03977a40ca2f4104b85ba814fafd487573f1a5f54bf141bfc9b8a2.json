{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f.alizadeh\\\\Desktop\\\\alizadeh\\\\admin_panel\\\\src\\\\components\\\\general_compo\\\\reusable_table\\\\reusable_table2\\\\Reusable_table2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getProductsService } from \"../../../../services/CRUD_categoryService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reusable_table2 = ({\n  nameOfColumn\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchChar, setSearchChar] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); // صفحه حال حاضر\n  const [countOnPage, setCountOnPage] = useState(10); // تعداد محصول در هر صفحه\n  const [pageCount, setPageCount] = useState(0); // تعداد کل صفحات\n\n  const searchParams = {\n    title: \"جستجو\",\n    placeholder: \"قسمتی از عنوان را وارد کنید\"\n  };\n  const handleGetProducts = async (page, count, char) => {\n    setLoading(true);\n    const res = await getProductsService(page, count, char);\n    res && setLoading(false);\n    if (res.status === 200) {\n      setData(res.data.data);\n      setPageCount(res.data.last_page);\n    }\n  };\n  const handleSearch = char => {\n    setSearchChar(char);\n    handleGetProducts(1, countOnPage, char);\n  };\n  useEffect(() => {\n    handleGetProducts(currentPage, countOnPage, searchChar);\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \" table_of_reusable_table table table-striped table-responsive text-center table-hover table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: nameOfColumn.map(item => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: nameOfColumn.map(item => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[item.field]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Reusable_table2, \"Siqm/qbNMiacZ51e0t77liu6z8A=\");\n_c = Reusable_table2;\nvar _c;\n$RefreshReg$(_c, \"Reusable_table2\");","map":{"version":3,"names":["React","useEffect","useState","getProductsService","jsxDEV","_jsxDEV","Reusable_table2","nameOfColumn","_s","data","setData","loading","setLoading","searchChar","setSearchChar","currentPage","setCurrentPage","countOnPage","setCountOnPage","pageCount","setPageCount","searchParams","title","placeholder","handleGetProducts","page","count","char","res","status","last_page","handleSearch","children","className","map","item","fileName","_jsxFileName","lineNumber","columnNumber","field","_c","$RefreshReg$"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/general_compo/reusable_table/reusable_table2/Reusable_table2.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getProductsService } from \"../../../../services/CRUD_categoryService\";\r\n\r\nexport const Reusable_table2 = ({nameOfColumn }) => {\r\n\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchChar, setSearchChar] = useState(\"\") \r\n  const [currentPage, setCurrentPage] = useState(1) // صفحه حال حاضر\r\n  const [countOnPage, setCountOnPage] = useState(10) // تعداد محصول در هر صفحه\r\n  const [pageCount, setPageCount] = useState(0) // تعداد کل صفحات\r\n\r\n  const searchParams = {\r\n    title: \"جستجو\",\r\n    placeholder: \"قسمتی از عنوان را وارد کنید\",\r\n  };\r\n\r\n  const handleGetProducts = async (page, count, char)=>{\r\n    setLoading(true)\r\n    const res = await getProductsService(page, count, char)\r\n    res && setLoading(false)\r\n    if (res.status === 200) {\r\n      setData(res.data.data)\r\n      setPageCount(res.data.last_page)\r\n    }\r\n  }\r\n\r\n  const handleSearch = (char)=>{\r\n    setSearchChar(char)\r\n    handleGetProducts(1, countOnPage, char)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    handleGetProducts(currentPage, countOnPage, searchChar)\r\n  },[currentPage])\r\n  return (\r\n    <div>\r\n      <table className=\" table_of_reusable_table table table-striped table-responsive text-center table-hover table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            {nameOfColumn.map((item) => (\r\n              <th>{item.title}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((data) => (\r\n            <tr>\r\n              {nameOfColumn.map((item) => (\r\n                <td>{data[item.field]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}