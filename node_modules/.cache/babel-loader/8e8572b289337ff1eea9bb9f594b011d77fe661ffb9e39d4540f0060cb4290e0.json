{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f.alizadeh\\\\Desktop\\\\alizadeh\\\\admin_panel\\\\src\\\\components\\\\pages\\\\2-product\\\\table_addition\\\\AddAttributes.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport { FormikControl } from \"../../../formik/FormikControl_AddItems\";\nimport { PrevPageBtn } from \"../../../general_compo/reusable_operations/PrevPageBtn\";\nimport { handleGetTypeOfAtt, onSubmit } from \"./FormikHelper_AddAtt_products\";\nimport { SubmitBtn } from \"../../../formik/SubmitBtn\";\nimport { GreenSpinner } from \"../../../general_compo/spinners&chips/GreenSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddAttributes = () => {\n  _s();\n  const location = useLocation();\n  const [typeAtt, setTypeAtt] = useState();\n  const [Id_product, setId_product] = useState([]);\n  const [isAnyAttr, setIsAnyAttr] = useState();\n  const [isSpinnerOn, setIsSpinnerOn] = useState(true);\n  const [initialValues, setInitialValues] = useState();\n  const [validationSchema, setValidationSchema] = useState({});\n\n  // useEffect(() => {\n  //   setId_product(location.state.rowData.id);\n  // }, [location]);\n\n  setTimeout(() => {\n    setIsSpinnerOn(false);\n  }, 700);\n  useEffect(() => {\n    handleGetTypeOfAtt(location, setTypeAtt, setInitialValues, setValidationSchema);\n  }, []);\n  useEffect(() => {\n    setIsAnyAttr(typeAtt === null || typeAtt === void 0 ? void 0 : typeAtt.map(item => item.data)[0]);\n  }, [typeAtt]);\n\n  //======================== üìç return =============================\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_addProduct p-3 d-flex justify-content-between container \",\n      children: /*#__PURE__*/_jsxDEV(PrevPageBtn, {\n        customStyle: \"fs-2 text-start text-secondary\",\n        returnTitle: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-xmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAttributes, \"tmAScG3N9dbiPpnxMtH4gRmoW/U=\", false, function () {\n  return [useLocation];\n});\n_c = AddAttributes;\nvar _c;\n$RefreshReg$(_c, \"AddAttributes\");","map":{"version":3,"names":["React","useEffect","useLocation","useState","Form","Formik","FormikControl","PrevPageBtn","handleGetTypeOfAtt","onSubmit","SubmitBtn","GreenSpinner","jsxDEV","_jsxDEV","AddAttributes","_s","location","typeAtt","setTypeAtt","Id_product","setId_product","isAnyAttr","setIsAnyAttr","isSpinnerOn","setIsSpinnerOn","initialValues","setInitialValues","validationSchema","setValidationSchema","setTimeout","map","item","data","className","children","customStyle","returnTitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/2-product/table_addition/AddAttributes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { FormikControl } from \"../../../formik/FormikControl_AddItems\";\r\nimport { PrevPageBtn } from \"../../../general_compo/reusable_operations/PrevPageBtn\";\r\nimport { handleGetTypeOfAtt, onSubmit } from \"./FormikHelper_AddAtt_products\";\r\nimport { SubmitBtn } from \"../../../formik/SubmitBtn\";\r\nimport { GreenSpinner } from \"../../../general_compo/spinners&chips/GreenSpinner\";\r\n\r\nexport const AddAttributes = () => {\r\n  const location = useLocation();\r\n  const [typeAtt, setTypeAtt] = useState();\r\n  const [Id_product, setId_product] = useState([]);\r\n  const [isAnyAttr, setIsAnyAttr] = useState();\r\n  const [isSpinnerOn, setIsSpinnerOn] = useState(true);\r\n  const [initialValues, setInitialValues] = useState();\r\n  const [validationSchema, setValidationSchema] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   setId_product(location.state.rowData.id);\r\n  // }, [location]);\r\n\r\n  setTimeout(() => {\r\n    setIsSpinnerOn(false);\r\n  }, 700);\r\n\r\n  useEffect(() => {\r\n    handleGetTypeOfAtt(\r\n      location,\r\n      setTypeAtt,\r\n      setInitialValues,\r\n      setValidationSchema\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsAnyAttr(typeAtt?.map((item) => item.data)[0]);\r\n  }, [typeAtt]);\r\n\r\n  //======================== üìç return =============================\r\n  return (\r\n    <div className=\" container mt-5\">\r\n      {/* ================= üìç üëáheader of page  ==================== */}\r\n      <div className=\"header_addProduct p-3 d-flex justify-content-between container \">\r\n        {/* <span className=\"d-flex\">\r\n          <h5 className=\"fw-bold\">ÿßŸÅÿ≤ŸàÿØŸÜ Ÿà€å⁄ò⁄Ø€å ÿ¨ÿØ€åÿØ :</h5>\r\n          <h5 className=\"text-primary px-2\">{location.state.rowData.title}</h5>\r\n        </span> */}\r\n        <PrevPageBtn\r\n          customStyle=\"fs-2 text-start text-secondary\"\r\n          returnTitle={<i className=\"fa-solid fa-xmark\"></i>}\r\n        />\r\n      </div>\r\n      {/* ================= üìç üëÜheader of page  ==================== */}\r\n      <div className=\"d-flex justify-content-center\">\r\n        {/* <div className=\"col-12 col-xxl-7 col-xl-8 col-lg-10\">\r\n          {initialValues ? (\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={(values, action) =>\r\n                onSubmit(Id_product, values, action)\r\n              }\r\n              validationSchema={validationSchema}\r\n            >\r\n              {(formik) => {\r\n                return (\r\n                  <div className=\"\">\r\n                    {isSpinnerOn && !isAnyAttr?.length ? (\r\n                      <GreenSpinner />\r\n                    ) : isAnyAttr?.length ? (\r\n                      <Form>\r\n                        {typeAtt?.map((item, index) => (\r\n                          <div className=\"py-2\">\r\n                            <div className=\"text-center py-2\">\r\n                              <span className=\"fs-4\"> ⁄Øÿ±ŸàŸá:</span>\r\n                              <span className=\"fs-5\">{item.groupTitle} </span>\r\n                            </div>\r\n                            {item.data.map((d) => (\r\n                              <FormikControl\r\n                                name={d.id}\r\n                                control=\"typeOfAtt\"\r\n                                titleOfAttr={d.title}\r\n                                unitOfAttr={d.unit}\r\n                              />\r\n                            ))}\r\n                          </div>\r\n                        ))}\r\n\r\n                        <div className=\" text-center pt-4\">\r\n                          <SubmitBtn />\r\n                        </div>\r\n                      </Form>\r\n                    ) : (\r\n                      <div className=\"text-center p-5 fs-5 fw-bolder text-primary\">\r\n                        Ÿá€å⁄Ü Ÿà€å⁄ò⁄Ø€å ÿß€å ÿ®ÿ±ÿß€å ÿß€åŸÜ ŸÖÿ≠ÿµŸàŸÑ ÿ´ÿ®ÿ™ ŸÜÿ¥ÿØŸá ÿßÿ≥ÿ™!...\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            \"d\"\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AACrC,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,WAAW,QAAQ,wDAAwD;AACpF,SAASC,kBAAkB,EAAEC,QAAQ,QAAQ,gCAAgC;AAC7E,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,YAAY,QAAQ,oDAAoD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5D;EACA;EACA;;EAEA0B,UAAU,CAAC,MAAM;IACfL,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,GAAG,CAAC;EAEPvB,SAAS,CAAC,MAAM;IACdO,kBAAkB,CAChBQ,QAAQ,EACRE,UAAU,EACVQ,gBAAgB,EAChBE,mBACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN3B,SAAS,CAAC,MAAM;IACdqB,YAAY,CAACL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;;EAEb;EACA,oBACEJ,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAE9BrB,OAAA;MAAKoB,SAAS,EAAC,iEAAiE;MAAAC,QAAA,eAK9ErB,OAAA,CAACN,WAAW;QACV4B,WAAW,EAAC,gCAAgC;QAC5CC,WAAW,eAAEvB,OAAA;UAAGoB,SAAS,EAAC;QAAmB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN3B,OAAA;MAAKoB,SAAS,EAAC;IAA+B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmDzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnGWD,aAAa;EAAA,QACPZ,WAAW;AAAA;AAAAuC,EAAA,GADjB3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}