{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewAttrForProductService, getAttributesService } from \"../../../../services/CRUD_categoryService\";\n\n//============= گرفتن تایپ ویژگی ها از محصول والد =============\nexport const handleGetTypeOfAtt = async (location, setTypeAtt, initialValues, setInitialValues, validationSchema, setValidationSchema) => {\n  console.log(initialValues);\n  console.log(validationSchema);\n  let attrVar = [];\n  let initials = {};\n  let rules = {};\n  Promise.all(location.state.rowData.categories.map(async cat => {\n    const res = await getAttributesService(cat.id);\n    if (res.status == 200) {\n      attrVar = [...attrVar, {\n        groupTitle: cat.title,\n        data: res.data.data\n      }];\n      if (res.data.data.length > 0) {\n        for (const d of res.data.data) {\n          initials = {\n            ...initials,\n            [d.id]: \"\"\n          };\n          rules = {\n            ...rules,\n            [d.id]: Yup.string()\n          };\n          console.log();\n        }\n      }\n    }\n  })).then(() => {\n    setTypeAtt(attrVar);\n    setInitialValues(initials);\n    setValidationSchema(Object.keys(initials).length > 0 ? Yup.object(rules) : {});\n  });\n};\n//چون مقدار اولیه ها و\n//validationSchema\n//در این صفحه متغیر است\n// برای همین به این شکل\n// نوشته شده است\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (Id_product, value) => {\n  const res = await createNewAttrForProductService(Id_product, value);\n  console.log(res);\n};","map":{"version":3,"names":["Yup","createNewAttrForProductService","getAttributesService","handleGetTypeOfAtt","location","setTypeAtt","initialValues","setInitialValues","validationSchema","setValidationSchema","console","log","attrVar","initials","rules","Promise","all","state","rowData","categories","map","cat","res","id","status","groupTitle","title","data","length","d","string","then","Object","keys","object","onSubmit","Id_product","value"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/2-product/table_addition/FormikHelper_AddAtt_products.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewAttrForProductService,\r\n  getAttributesService,\r\n} from \"../../../../services/CRUD_categoryService\";\r\n\r\n//============= گرفتن تایپ ویژگی ها از محصول والد =============\r\nexport const handleGetTypeOfAtt = async (\r\n  location,\r\n  setTypeAtt,\r\n  initialValues,\r\n  setInitialValues,\r\n  validationSchema,\r\n  setValidationSchema,\r\n) => {\r\n  console.log(initialValues);\r\n  console.log(validationSchema);\r\n  let attrVar = [];\r\n  let initials = {};\r\n  let rules = {};\r\n  Promise.all(\r\n    location.state.rowData.categories.map(async (cat) => {\r\n      const res = await getAttributesService(cat.id);\r\n      if (res.status == 200) {\r\n        attrVar = [...attrVar, { groupTitle: cat.title, data: res.data.data }];\r\n        if (res.data.data.length > 0) {\r\n          for (const d of res.data.data) {\r\n            initials = { ...initials, [d.id]: \"\" };\r\n            rules = { ...rules, [d.id]: Yup.string() };\r\n            console.log();\r\n          }\r\n        }\r\n      }\r\n    })\r\n  ).then(() => {\r\n    setTypeAtt(attrVar);\r\n    setInitialValues(initials);\r\n    setValidationSchema(\r\n      Object.keys(initials).length > 0 ? Yup.object(rules) : {}\r\n    );\r\n  });\r\n};\r\n//چون مقدار اولیه ها و\r\n//validationSchema\r\n//در این صفحه متغیر است\r\n// برای همین به این شکل\r\n// نوشته شده است\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (Id_product, value) => {\r\n  const res = await createNewAttrForProductService(Id_product, value);\r\n  console.log(res);\r\n};\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,8BAA8B,EAC9BC,oBAAoB,QACf,2CAA2C;;AAElD;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAChCC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,KAChB;EACHC,OAAO,CAACC,GAAG,CAACL,aAAa,CAAC;EAC1BI,OAAO,CAACC,GAAG,CAACH,gBAAgB,CAAC;EAC7B,IAAII,OAAO,GAAG,EAAE;EAChB,IAAIC,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACdC,OAAO,CAACC,GAAG,CACTZ,QAAQ,CAACa,KAAK,CAACC,OAAO,CAACC,UAAU,CAACC,GAAG,CAAC,MAAOC,GAAG,IAAK;IACnD,MAAMC,GAAG,GAAG,MAAMpB,oBAAoB,CAACmB,GAAG,CAACE,EAAE,CAAC;IAC9C,IAAID,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBZ,OAAO,GAAG,CAAC,GAAGA,OAAO,EAAE;QAAEa,UAAU,EAAEJ,GAAG,CAACK,KAAK;QAAEC,IAAI,EAAEL,GAAG,CAACK,IAAI,CAACA;MAAK,CAAC,CAAC;MACtE,IAAIL,GAAG,CAACK,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5B,KAAK,MAAMC,CAAC,IAAIP,GAAG,CAACK,IAAI,CAACA,IAAI,EAAE;UAC7Bd,QAAQ,GAAG;YAAE,GAAGA,QAAQ;YAAE,CAACgB,CAAC,CAACN,EAAE,GAAG;UAAG,CAAC;UACtCT,KAAK,GAAG;YAAE,GAAGA,KAAK;YAAE,CAACe,CAAC,CAACN,EAAE,GAAGvB,GAAG,CAAC8B,MAAM,CAAC;UAAE,CAAC;UAC1CpB,OAAO,CAACC,GAAG,CAAC,CAAC;QACf;MACF;IACF;EACF,CAAC,CACH,CAAC,CAACoB,IAAI,CAAC,MAAM;IACX1B,UAAU,CAACO,OAAO,CAAC;IACnBL,gBAAgB,CAACM,QAAQ,CAAC;IAC1BJ,mBAAmB,CACjBuB,MAAM,CAACC,IAAI,CAACpB,QAAQ,CAAC,CAACe,MAAM,GAAG,CAAC,GAAG5B,GAAG,CAACkC,MAAM,CAACpB,KAAK,CAAC,GAAG,CAAC,CAC1D,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMqB,QAAQ,GAAG,MAAAA,CAAOC,UAAU,EAAEC,KAAK,KAAK;EACnD,MAAMf,GAAG,GAAG,MAAMrB,8BAA8B,CAACmC,UAAU,EAAEC,KAAK,CAAC;EACnE3B,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}