{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewProductService, updateProductService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== 📍initialValues =====================\nexport const initialValues = {\n  category_ids: \"\",\n  title: \"\",\n  price: \"\",\n  weight: \"\",\n  brand_id: \"\",\n  color_ids: \"\",\n  guarantee_ids: \"\",\n  descriptions: \"\",\n  short_descriptions: \"\",\n  cart_descriptions: \"\",\n  image: \"\",\n  alt_image: \"\",\n  discount: \"\",\n  keywords: \"\",\n  stock: \"\"\n};\n\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (rowData, action, reInitialize, setReInitialize) => {\n  console.log(reInitialize);\n  if (reInitialize.id) {\n    //📍ویرایش\n    const res = await updateProductService(rowData, reInitialize.id);\n    console.log(res.data.data);\n    if (res.status == 200) {\n      swal(\"ویرایش شد!...\", res.data.message, \"success\");\n    }\n  } else {\n    //📍افزودن محصول جدید\n    const res = await createNewProductService(rowData);\n    console.log(res.data.data);\n    if (res.status == 201) {\n      swal(\"ثبت شد!...\", res.data.message, \"success\");\n    }\n  }\n};\n\n//====================== 📍validationSchema ===================\nexport const validationSchema = Yup.object({\n  category_ids: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\n  title: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\n  price: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\n  stock: Yup.string().required(\"پر کردن این فیلد اجباری است\")\n});","map":{"version":3,"names":["Yup","createNewProductService","updateProductService","swal","initialValues","category_ids","title","price","weight","brand_id","color_ids","guarantee_ids","descriptions","short_descriptions","cart_descriptions","image","alt_image","discount","keywords","stock","onSubmit","rowData","action","reInitialize","setReInitialize","console","log","id","res","data","status","message","validationSchema","object","string","required"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/2-product/FormikHelper_products.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewProductService,\r\n  updateProductService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== 📍initialValues =====================\r\nexport const initialValues = {\r\n  category_ids: \"\",\r\n  title: \"\",\r\n  price: \"\",\r\n  weight: \"\",\r\n  brand_id: \"\",\r\n  color_ids: \"\",\r\n  guarantee_ids: \"\",\r\n  descriptions: \"\",\r\n  short_descriptions: \"\",\r\n  cart_descriptions: \"\",\r\n  image: \"\",\r\n  alt_image: \"\",\r\n  discount: \"\",\r\n  keywords: \"\",\r\n  stock: \"\",\r\n};\r\n\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (\r\n  rowData,\r\n  action,\r\n  reInitialize,\r\n  setReInitialize\r\n) => {\r\n  console.log(reInitialize);\r\n  if (reInitialize.id) {\r\n    //📍ویرایش\r\n    const res = await updateProductService(rowData, reInitialize.id);\r\n    console.log(res.data.data);\r\n    if (res.status == 200) {\r\n      swal(\"ویرایش شد!...\", res.data.message, \"success\");\r\n    }\r\n  } else {\r\n    //📍افزودن محصول جدید\r\n    const res = await createNewProductService(rowData);\r\n    console.log(res.data.data);\r\n    if (res.status == 201) {\r\n      swal(\"ثبت شد!...\", res.data.message, \"success\");\r\n    }\r\n  }\r\n};\r\n\r\n//====================== 📍validationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  category_ids: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\r\n  title: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\r\n  price: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\r\n  stock: Yup.string().required(\"پر کردن این فیلد اجباری است\"),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,uBAAuB,EACvBC,oBAAoB,QACf,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,YAAY,EAAE,EAAE;EAChBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,kBAAkB,EAAE,EAAE;EACtBC,iBAAiB,EAAE,EAAE;EACrBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,OAAO,EACPC,MAAM,EACNC,YAAY,EACZC,eAAe,KACZ;EACHC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;EACzB,IAAIA,YAAY,CAACI,EAAE,EAAE;IACnB;IACA,MAAMC,GAAG,GAAG,MAAM1B,oBAAoB,CAACmB,OAAO,EAAEE,YAAY,CAACI,EAAE,CAAC;IAChEF,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;IAC1B,IAAID,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrB3B,IAAI,CAAC,eAAe,EAAEyB,GAAG,CAACC,IAAI,CAACE,OAAO,EAAE,SAAS,CAAC;IACpD;EACF,CAAC,MAAM;IACL;IACA,MAAMH,GAAG,GAAG,MAAM3B,uBAAuB,CAACoB,OAAO,CAAC;IAClDI,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,IAAI,CAACA,IAAI,CAAC;IAC1B,IAAID,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrB3B,IAAI,CAAC,YAAY,EAAEyB,GAAG,CAACC,IAAI,CAACE,OAAO,EAAE,SAAS,CAAC;IACjD;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGhC,GAAG,CAACiC,MAAM,CAAC;EACzC5B,YAAY,EAAEL,GAAG,CAACkC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B,CAAC;EAClE7B,KAAK,EAAEN,GAAG,CAACkC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B,CAAC;EAC3D5B,KAAK,EAAEP,GAAG,CAACkC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B,CAAC;EAC3DhB,KAAK,EAAEnB,GAAG,CAACkC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,6BAA6B;AAC5D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}