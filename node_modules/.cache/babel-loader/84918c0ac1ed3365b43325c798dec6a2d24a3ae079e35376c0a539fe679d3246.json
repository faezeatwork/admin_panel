{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewRoleService, updateRoleService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== 📍initialValues =====================\nexport const initialValues = {\n  id: \"\",\n  title: \"\",\n  description: \"\",\n  permissions_id: []\n  // permissions: [],\n};\n\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (values, actions, reInitialize) => {\n  if (reInitialize) {\n    //------- ⭐ ویرایش یکی از رنگ ها ---------\n    const res = await updateRoleService(reInitialize.id, values);\n    console.log(res);\n    if (res.status == 200) {\n      swal(\"ویرایش شد\", res.data.message, \"success\");\n      console.log(res.data);\n    }\n  } else {\n    // -------- ⭐ افزودن یک نقش جدید ----------\n    const res = await createNewRoleService(values);\n    if (res.status == 201) {\n      console.log(res.data);\n      swal(\"ثبت شد\", res.data.message, \"success\");\n      actions.resetForm();\n    }\n  }\n};\n\n//====================== 📍validationSchema ===================\nexport const validationSchema = Yup.object({\n  title: Yup.string().required(\"فیلد الزامی\").matches(/^[A-Za-z\\u0600-\\u06FF\\s]+$/, \"فقط از حروف فارسی یا لاتین استفاده شود\"),\n  description: Yup.string().required(\"فیلد الزامی\").matches(/^[A-Za-z\\u0600-\\u06FF\\s]+$/, \"فقط از حروف فارسی یا لاتین استفاده شود\"),\n  permissions_id: Yup.array().min(1, \"حداقل یکی از دسترسی ها باید انتخاب شود\")\n});","map":{"version":3,"names":["Yup","createNewRoleService","updateRoleService","swal","initialValues","id","title","description","permissions_id","onSubmit","values","actions","reInitialize","res","console","log","status","data","message","resetForm","validationSchema","object","string","required","matches","array","min"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/11-roles/FormikHelper_roles.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewRoleService,\r\n  updateRoleService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== 📍initialValues =====================\r\nexport const initialValues = {\r\n  id: \"\",\r\n  title: \"\",\r\n  description: \"\",\r\n  permissions_id: [],\r\n  // permissions: [],\r\n};\r\n\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (values, actions, reInitialize) => {\r\n  if (reInitialize) {\r\n    //------- ⭐ ویرایش یکی از رنگ ها ---------\r\n    const res = await updateRoleService(reInitialize.id, values);\r\n    console.log(res);\r\n    if (res.status == 200) {\r\n      swal(\"ویرایش شد\", res.data.message, \"success\");\r\n      console.log(res.data);\r\n    }\r\n  } else {\r\n    // -------- ⭐ افزودن یک نقش جدید ----------\r\n    const res = await createNewRoleService(values);\r\n    if (res.status == 201) {\r\n      console.log(res.data);\r\n      swal(\"ثبت شد\", res.data.message, \"success\");\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n\r\n//====================== 📍validationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"فیلد الزامی\")\r\n    .matches(\r\n      /^[A-Za-z\\u0600-\\u06FF\\s]+$/,\r\n      \"فقط از حروف فارسی یا لاتین استفاده شود\"\r\n    ),\r\n  description: Yup.string()\r\n    .required(\"فیلد الزامی\")\r\n    .matches(\r\n      /^[A-Za-z\\u0600-\\u06FF\\s]+$/,\r\n      \"فقط از حروف فارسی یا لاتین استفاده شود\"\r\n    ),\r\n  permissions_id: Yup.array().min(1, \"حداقل یکی از دسترسی ها باید انتخاب شود\"),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,oBAAoB,EACpBC,iBAAiB,QACZ,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAE;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,EAAEC,YAAY,KAAK;EAC/D,IAAIA,YAAY,EAAE;IAChB;IACA,MAAMC,GAAG,GAAG,MAAMX,iBAAiB,CAACU,YAAY,CAACP,EAAE,EAAEK,MAAM,CAAC;IAC5DI,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAIA,GAAG,CAACG,MAAM,IAAI,GAAG,EAAE;MACrBb,IAAI,CAAC,WAAW,EAAEU,GAAG,CAACI,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAC9CJ,OAAO,CAACC,GAAG,CAACF,GAAG,CAACI,IAAI,CAAC;IACvB;EACF,CAAC,MAAM;IACL;IACA,MAAMJ,GAAG,GAAG,MAAMZ,oBAAoB,CAACS,MAAM,CAAC;IAC9C,IAAIG,GAAG,CAACG,MAAM,IAAI,GAAG,EAAE;MACrBF,OAAO,CAACC,GAAG,CAACF,GAAG,CAACI,IAAI,CAAC;MACrBd,IAAI,CAAC,QAAQ,EAAEU,GAAG,CAACI,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAC3CP,OAAO,CAACQ,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGpB,GAAG,CAACqB,MAAM,CAAC;EACzCf,KAAK,EAAEN,GAAG,CAACsB,MAAM,CAAC,CAAC,CAChBC,QAAQ,CAAC,aAAa,CAAC,CACvBC,OAAO,CACN,4BAA4B,EAC5B,wCACF,CAAC;EACHjB,WAAW,EAAEP,GAAG,CAACsB,MAAM,CAAC,CAAC,CACtBC,QAAQ,CAAC,aAAa,CAAC,CACvBC,OAAO,CACN,4BAA4B,EAC5B,wCACF,CAAC;EACHhB,cAAc,EAAER,GAAG,CAACyB,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,wCAAwC;AAC7E,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}