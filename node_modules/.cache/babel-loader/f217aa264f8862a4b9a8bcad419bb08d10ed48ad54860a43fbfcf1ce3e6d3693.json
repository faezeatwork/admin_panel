{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewBrandService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\nimport { useEffect } from \"react\";\n\n//====================== 📍initialValues =====================\nexport const initialValues = {\n  original_name: \"\",\n  persian_name: \"\",\n  descriptions: \"\",\n  logo: null\n};\n\n//====================== 📍onSubmit ===========================\nexport const onSubmit = async (data, actions, tableData, setTableData, brandId) => {\n  if (brandId) {} else {}\n};\n\n//====================== 📍validationSchema ===================\nexport const validationSchema = Yup.object({\n  original_name: Yup.string().required(\"لطفا این قسمت را پر کنید\").matches(/^[0-9A-Za-z]{1,}$/, \"فقط حروف انگلیسی\"),\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"فقط حروف فارسی\"),\n  descriptions: Yup.string().matches(/^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/, \"فقط حروف و اعداد مجازند\")\n});","map":{"version":3,"names":["Yup","createNewBrandService","swal","useEffect","initialValues","original_name","persian_name","descriptions","logo","onSubmit","data","actions","tableData","setTableData","brandId","validationSchema","object","string","required","matches"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/brand/FormikHelper_brands.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport { createNewBrandService } from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\nimport { useEffect } from \"react\";\r\n\r\n//====================== 📍initialValues =====================\r\nexport const initialValues = {\r\n  original_name: \"\",\r\n  persian_name: \"\",\r\n  descriptions: \"\",\r\n  logo: null,\r\n};\r\n\r\n//====================== 📍onSubmit ===========================\r\nexport const onSubmit = async (\r\n  data,\r\n  actions,\r\n  tableData,\r\n  setTableData,\r\n  brandId\r\n) => {\r\nif (brandId) {\r\n  \r\n}else{\r\n\r\n}\r\n\r\n\r\n};\r\n\r\n//====================== 📍validationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  original_name: Yup.string()\r\n    .required(\"لطفا این قسمت را پر کنید\")\r\n    .matches(/^[0-9A-Za-z]{1,}$/, \"فقط حروف انگلیسی\"),\r\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"فقط حروف فارسی\"),\r\n  descriptions: Yup.string().matches(\r\n    /^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/,\r\n    \"فقط حروف و اعداد مجازند\"\r\n  ),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAASC,qBAAqB,QAAQ,wCAAwC;AAC9E,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,IAAI,EACJC,OAAO,EACPC,SAAS,EACTC,YAAY,EACZC,OAAO,KACJ;EACL,IAAIA,OAAO,EAAE,CAEb,CAAC,MAAI,CAEL;AAGA,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGf,GAAG,CAACgB,MAAM,CAAC;EACzCX,aAAa,EAAEL,GAAG,CAACiB,MAAM,CAAC,CAAC,CACxBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,OAAO,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;EACnDb,YAAY,EAAEN,GAAG,CAACiB,MAAM,CAAC,CAAC,CAACE,OAAO,CAAC,sBAAsB,EAAE,gBAAgB,CAAC;EAC5EZ,YAAY,EAAEP,GAAG,CAACiB,MAAM,CAAC,CAAC,CAACE,OAAO,CAChC,+BAA+B,EAC/B,yBACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}