{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getUserService } from \"../../services/authServices\";\nexport const useIsLogin = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [isLogin, setIsLogin] = useState(false);\n\n  // useEffect(() => {\n  //   const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\n  //   if (loginToken) {\n  //     axios\n  //       .get(\"https://ecomadminapi.azhadev.ir/api/auth/user\", {\n  //         headers: {\n  //           Authorization: `Bearer ${loginToken.token}`,\n  //         },\n  //       })\n  //       .then((res) => {\n  //         setIsLogin(res.status == 200 ? true : false);\n  //         setLoading(false);\n  //       })\n  //       .catch(() => {\n  //         localStorage.removeItem(\"loginToken\");\n  //         setIsLogin(false);\n  //         setLoading(false);\n  //       });\n  //   } else {\n  //     setIsLogin(false);\n  //     setLoading(false);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\n  //   if (loginToken) {\n  //     const res = getUserService(loginToken);\n  //     try {\n  //       setIsLogin(res.status == 200 ? true : false);\n  //       setLoading(false);\n  //     } catch (error) {\n  //       localStorage.removeItem(\"loginToken\");\n  //       setIsLogin(false);\n  //       setLoading(false);\n  //     }\n  //   } else {\n  //     setIsLogin(false);\n  //     setLoading(false);\n  //   }\n  // }, []);\n\n  return [isLogin, loading];\n};\n_s(useIsLogin, \"2gdNj41WtDS6fi+ikZlkqVU59Pc=\");","map":{"version":3,"names":["axios","useEffect","useState","getUserService","useIsLogin","_s","loading","setLoading","isLogin","setIsLogin"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/components/hooks/useIsLogin.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getUserService } from \"../../services/authServices\";\r\n\r\nexport const useIsLogin = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\r\n  //   if (loginToken) {\r\n  //     axios\r\n  //       .get(\"https://ecomadminapi.azhadev.ir/api/auth/user\", {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${loginToken.token}`,\r\n  //         },\r\n  //       })\r\n  //       .then((res) => {\r\n  //         setIsLogin(res.status == 200 ? true : false);\r\n  //         setLoading(false);\r\n  //       })\r\n  //       .catch(() => {\r\n  //         localStorage.removeItem(\"loginToken\");\r\n  //         setIsLogin(false);\r\n  //         setLoading(false);\r\n  //       });\r\n  //   } else {\r\n  //     setIsLogin(false);\r\n  //     setLoading(false);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const loginToken = JSON.parse(localStorage.getItem(\"loginToken\"));\r\n  //   if (loginToken) {\r\n  //     const res = getUserService(loginToken);\r\n  //     try {\r\n  //       setIsLogin(res.status == 200 ? true : false);\r\n  //       setLoading(false);\r\n  //     } catch (error) {\r\n  //       localStorage.removeItem(\"loginToken\");\r\n  //       setIsLogin(false);\r\n  //       setLoading(false);\r\n  //     }\r\n  //   } else {\r\n  //     setIsLogin(false);\r\n  //     setLoading(false);\r\n  //   }\r\n  // }, []);\r\n\r\n  return [isLogin, loading];\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,6BAA6B;AAE5D,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO,CAACM,OAAO,EAAEF,OAAO,CAAC;AAC3B,CAAC;AAACD,EAAA,CA/CWD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}