{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewGuaranteeService, updateGuaranteeService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== üìçinitialValues =====================\nexport const initialValues = {\n  title: \"\",\n  descriptions: \"\",\n  length: \"\",\n  length_unit: \"\"\n};\n//====================== üìçonSubmit ===========================\nexport const onSubmit = async (values, actions, setData, guaranteeToEdit, setGuaranteeToEdit, lengthUnit) => {\n  if (guaranteeToEdit !== null && guaranteeToEdit !== void 0 && guaranteeToEdit.length) {\n    const newValues = {\n      ...values,\n      length_unit: lengthUnit\n    };\n    const res = await updateGuaranteeService(newValues, guaranteeToEdit.id);\n    if (res.status == 200) {\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\n      setData(oldData => {\n        let newData = [...oldData];\n        let index = oldData.findIndex(d => d.id == guaranteeToEdit.id);\n        newData[index] = res.data.data;\n        return newData;\n      });\n      setGuaranteeToEdit(res.data.data);\n    }\n  } else {\n    const newValues = {\n      ...values,\n      length_unit: lengthUnit\n    };\n    const res = await createNewGuaranteeService(newValues);\n    if (res.status == 201) {\n      setData(data => [...data, res.data.data]);\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\n      actions.resetForm();\n    }\n  }\n};\n//====================== üìçvalidationSchema ===================\n\nconst yup = require('yup');\nconst {\n  setLocale\n} = yup;\nsetLocale({\n  mixed: {\n    notType: 'the ${path} is obligatory',\n    required: 'the field ${path} is obligatory',\n    oneOf: 'the field ${path} must have one of the following values: ${values}'\n  }\n});\nexport const validationSchema = yup.object().shape({\n  title: yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\").matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"ŸÅŸÇÿ∑ ÿßÿ≤ ÿßÿπÿØÿßÿØ Ÿà ÿ≠ÿ±ŸàŸÅ ŸÑÿßÿ™€åŸÜ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿ¥ŸàÿØ\"),\n  length: yup.string().ensure().when(\"length_unit\", {\n    is: \"\",\n    then: yup.string().required(\"??\")\n    //otherwise: yup.string(),\n  }),\n\n  length_unit: yup.string().ensure().when(\"length\", {\n    is: \"\",\n    then: yup.string().required(\"??\")\n    //otherwise: Yup.string(),\n  })\n}, [[\"length\", \"length_unit\"]]);","map":{"version":3,"names":["Yup","createNewGuaranteeService","updateGuaranteeService","swal","initialValues","title","descriptions","length","length_unit","onSubmit","values","actions","setData","guaranteeToEdit","setGuaranteeToEdit","lengthUnit","newValues","res","id","status","data","message","oldData","newData","index","findIndex","d","resetForm","yup","require","setLocale","mixed","notType","required","oneOf","validationSchema","object","shape","string","matches","ensure","when","is","then"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/guarantee/FormikHelper_guarantee.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewGuaranteeService,\r\n  updateGuaranteeService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== üìçinitialValues =====================\r\nexport const initialValues = {\r\n  title: \"\",\r\n  descriptions: \"\",\r\n  length: \"\",\r\n  length_unit: \"\",\r\n};\r\n//====================== üìçonSubmit ===========================\r\nexport const onSubmit = async (\r\n  values,\r\n  actions,\r\n  setData,\r\n  guaranteeToEdit,\r\n  setGuaranteeToEdit,\r\n  lengthUnit\r\n) => {\r\n  if (guaranteeToEdit?.length) {\r\n    const newValues = {\r\n      ...values,\r\n      length_unit: lengthUnit,\r\n    };\r\n    const res = await updateGuaranteeService(newValues, guaranteeToEdit.id);\r\n    if (res.status == 200) {\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\r\n\r\n      setData((oldData) => {\r\n        let newData = [...oldData];\r\n        let index = oldData.findIndex((d) => d.id == guaranteeToEdit.id);\r\n        newData[index] = res.data.data;\r\n        return newData;\r\n      });\r\n      setGuaranteeToEdit(res.data.data);\r\n    }\r\n  } else {\r\n    const newValues = {\r\n      ...values,\r\n      length_unit: lengthUnit,\r\n    };\r\n\r\n    const res = await createNewGuaranteeService(newValues);\r\n\r\n    if (res.status == 201) {\r\n      setData((data) => [...data, res.data.data]);\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n//====================== üìçvalidationSchema ===================\r\n\r\nconst yup = require('yup')\r\nconst {\r\n  setLocale\r\n} = yup\r\n\r\nsetLocale({\r\n  mixed: {\r\n    notType: 'the ${path} is obligatory',\r\n    required: 'the field ${path} is obligatory',\r\n    oneOf: 'the field ${path} must have one of the following values: ${values}'\r\n  }\r\n})\r\n\r\n\r\n\r\nexport const validationSchema = yup.object().shape(\r\n  {\r\n    title: yup.string()\r\n      .required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\")\r\n      .matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"ŸÅŸÇÿ∑ ÿßÿ≤ ÿßÿπÿØÿßÿØ Ÿà ÿ≠ÿ±ŸàŸÅ ŸÑÿßÿ™€åŸÜ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿ¥ŸàÿØ\"),\r\n\r\n    length: yup.string()\r\n      .ensure()\r\n      .when(\"length_unit\", {\r\n        is: \"\",\r\n        then: yup.string().required(\"??\"),\r\n        //otherwise: yup.string(),\r\n      }),\r\n    length_unit: yup.string()\r\n      .ensure()\r\n      .when(\"length\", {\r\n        is: \"\",\r\n        then: yup.string().required(\"??\"),\r\n        //otherwise: Yup.string(),\r\n      }),\r\n  },\r\n  [[\"length\", \"length_unit\"]]\r\n);\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,yBAAyB,EACzBC,sBAAsB,QACjB,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE;AACf,CAAC;AACD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,UAAU,KACP;EACH,IAAIF,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEN,MAAM,EAAE;IAC3B,MAAMS,SAAS,GAAG;MAChB,GAAGN,MAAM;MACTF,WAAW,EAAEO;IACf,CAAC;IACD,MAAME,GAAG,GAAG,MAAMf,sBAAsB,CAACc,SAAS,EAAEH,eAAe,CAACK,EAAE,CAAC;IACvE,IAAID,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBhB,IAAI,CAAC,SAAS,EAAEc,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAE5CT,OAAO,CAAEU,OAAO,IAAK;QACnB,IAAIC,OAAO,GAAG,CAAC,GAAGD,OAAO,CAAC;QAC1B,IAAIE,KAAK,GAAGF,OAAO,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,IAAIL,eAAe,CAACK,EAAE,CAAC;QAChEK,OAAO,CAACC,KAAK,CAAC,GAAGP,GAAG,CAACG,IAAI,CAACA,IAAI;QAC9B,OAAOG,OAAO;MAChB,CAAC,CAAC;MACFT,kBAAkB,CAACG,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC;IACnC;EACF,CAAC,MAAM;IACL,MAAMJ,SAAS,GAAG;MAChB,GAAGN,MAAM;MACTF,WAAW,EAAEO;IACf,CAAC;IAED,MAAME,GAAG,GAAG,MAAMhB,yBAAyB,CAACe,SAAS,CAAC;IAEtD,IAAIC,GAAG,CAACE,MAAM,IAAI,GAAG,EAAE;MACrBP,OAAO,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,GAAG,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC;MAC3CjB,IAAI,CAAC,SAAS,EAAEc,GAAG,CAACG,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAC5CV,OAAO,CAACgB,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;AACD;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAM;EACJC;AACF,CAAC,GAAGF,GAAG;AAEPE,SAAS,CAAC;EACRC,KAAK,EAAE;IACLC,OAAO,EAAE,2BAA2B;IACpCC,QAAQ,EAAE,iCAAiC;IAC3CC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAIF,OAAO,MAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,KAAK,CAChD;EACEhC,KAAK,EAAEuB,GAAG,CAACU,MAAM,CAAC,CAAC,CAChBL,QAAQ,CAAC,0BAA0B,CAAC,CACpCM,OAAO,CAAC,wBAAwB,EAAE,uCAAuC,CAAC;EAE7EhC,MAAM,EAAEqB,GAAG,CAACU,MAAM,CAAC,CAAC,CACjBE,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,aAAa,EAAE;IACnBC,EAAE,EAAE,EAAE;IACNC,IAAI,EAAEf,GAAG,CAACU,MAAM,CAAC,CAAC,CAACL,QAAQ,CAAC,IAAI;IAChC;EACF,CAAC,CAAC;;EACJzB,WAAW,EAAEoB,GAAG,CAACU,MAAM,CAAC,CAAC,CACtBE,MAAM,CAAC,CAAC,CACRC,IAAI,CAAC,QAAQ,EAAE;IACdC,EAAE,EAAE,EAAE;IACNC,IAAI,EAAEf,GAAG,CAACU,MAAM,CAAC,CAAC,CAACL,QAAQ,CAAC,IAAI;IAChC;EACF,CAAC;AACL,CAAC,EACD,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,CAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}