{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert\";\nimport * as Yup from \"yup\";\n\n// ==================  📍initialValues ======================\nexport const initialValues = {\n  phone: \"\",\n  password: \"\",\n  remember: false\n};\n\n//===================  📍validationSchema ==================\nexport const validationSchema = Yup.object({\n  phone: Yup.number().typeError(\"قالب شماره تلفن را رعایت کنید\").required(\"فیلد اجباری\"),\n  password: Yup.string().required(\"فیلد اجباری\")\n  // .matches(\n  //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{4,})/,\n  //   \"مانند نمونه: XPp1@c5\"\n  // ),\n});\n\n//=========================  📍onSubmit ======================\nexport const onSubmit = values => {\n  console.log('enter onSubmit login');\n  axios.post(\"http://127.0.0.1:8000/api/auth/login\", {\n    ...values,\n    remember: values.remember ? 1 : 0\n  }).then(res => {\n    if (res.status == 200) {\n      localStorage.setItem('loginToken');\n      alert(\"ورود با موفقیت انجام شد\");\n    } else if (res.status == 203) {\n      alert(\"مشخصات وارد شده صحیح نمی باشند\");\n    }\n    console.log(res);\n  }).catch(error => {\n    console.error(error.response.data);\n  });\n};","map":{"version":3,"names":["axios","swal","Yup","initialValues","phone","password","remember","validationSchema","object","number","typeError","required","string","onSubmit","values","console","log","post","then","res","status","localStorage","setItem","alert","catch","error","response","data"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/components/pages/authorization/formikAttribute_auth.js"],"sourcesContent":["import axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nimport * as Yup from \"yup\";\r\n\r\n// ==================  📍initialValues ======================\r\nexport const initialValues = {\r\n  phone: \"\",\r\n  password: \"\",\r\n  remember: false,\r\n};\r\n\r\n//===================  📍validationSchema ==================\r\nexport const validationSchema = Yup.object({\r\n  phone: Yup.number()\r\n    .typeError(\"قالب شماره تلفن را رعایت کنید\")\r\n    .required(\"فیلد اجباری\"),\r\n\r\n  password: Yup.string().required(\"فیلد اجباری\"),\r\n  // .matches(\r\n  //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{4,})/,\r\n  //   \"مانند نمونه: XPp1@c5\"\r\n  // ),\r\n});\r\n\r\n//=========================  📍onSubmit ======================\r\nexport const onSubmit = (values) => {\r\n  console.log('enter onSubmit login');\r\n  axios\r\n    .post(\"http://127.0.0.1:8000/api/auth/login\", {\r\n      ...values,\r\n      remember: values.remember ? 1 : 0,\r\n    })\r\n    .then((res) => {\r\n      if (res.status == 200) {\r\n        localStorage.setItem('loginToken')\r\n        alert(\"ورود با موفقیت انجام شد\");\r\n      } else if (res.status == 203) {\r\n        alert(\"مشخصات وارد شده صحیح نمی باشند\");\r\n      }\r\n      console.log(res);\r\n    })\r\n    .catch((error) => {\r\n      console.error(error.response.data);\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,KAAKC,GAAG,MAAM,KAAK;;AAE1B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAM,CAAC;EACzCJ,KAAK,EAAEF,GAAG,CAACO,MAAM,CAAC,CAAC,CAChBC,SAAS,CAAC,+BAA+B,CAAC,CAC1CC,QAAQ,CAAC,aAAa,CAAC;EAE1BN,QAAQ,EAAEH,GAAG,CAACU,MAAM,CAAC,CAAC,CAACD,QAAQ,CAAC,aAAa;EAC7C;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAME,QAAQ,GAAIC,MAAM,IAAK;EAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnChB,KAAK,CACFiB,IAAI,CAAC,sCAAsC,EAAE;IAC5C,GAAGH,MAAM;IACTR,QAAQ,EAAEQ,MAAM,CAACR,QAAQ,GAAG,CAAC,GAAG;EAClC,CAAC,CAAC,CACDY,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAClCC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAM,IAAIJ,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MAC5BG,KAAK,CAAC,gCAAgC,CAAC;IACzC;IACAR,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;EAClB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;IAChBV,OAAO,CAACU,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC;EACpC,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}