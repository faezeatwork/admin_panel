{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewGuaranteeService, updateGuaranteeService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== üìçinitialValues =====================\nexport const initialValues = {\n  id: \"\",\n  title: \"\",\n  descriptions: \"\",\n  length: \"\",\n  length_unit: \"\"\n};\n//====================== üìçonSubmit ===========================\nexport const onSubmit = async (values, actions, setData, guaranteeToEdit, setGuaranteeToEdit, lengthUnit) => {\n  if (guaranteeToEdit !== null && guaranteeToEdit !== void 0 && guaranteeToEdit.length) {\n    const newValues = {\n      ...values,\n      length_unit: lengthUnit\n    };\n    const res = await updateGuaranteeService(newValues, guaranteeToEdit.id);\n    if (res.status == 200) {\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\n      setData(oldData => {\n        let newData = [...oldData];\n        let index = oldData.findIndex(d => d.id == guaranteeToEdit.id);\n        newData[index] = res.data.data;\n        return newData;\n      });\n      setGuaranteeToEdit(res.data.data);\n    }\n  } else {\n    const newValues = {\n      ...values,\n      length_unit: lengthUnit\n    };\n    const res = await createNewGuaranteeService(newValues);\n    if (res.status == 201) {\n      setData(data => [...data, res.data.data]);\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\n      actions.resetForm();\n    }\n  }\n};\n\n//====================== üìçvalidationSchema ===================\nexport const validationSchema = Yup.object({\n  title: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\").matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"ŸÅŸÇÿ∑ ÿßÿ≤ ÿßÿπÿØÿßÿØ Ÿà ÿ≠ÿ±ŸàŸÅ ŸÑÿßÿ™€åŸÜ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿ¥ŸàÿØ\"),\n  length: Yup.string(),\n  length_unit: Yup.string()\n});","map":{"version":3,"names":["Yup","createNewGuaranteeService","updateGuaranteeService","swal","initialValues","id","title","descriptions","length","length_unit","onSubmit","values","actions","setData","guaranteeToEdit","setGuaranteeToEdit","lengthUnit","newValues","res","status","data","message","oldData","newData","index","findIndex","d","resetForm","validationSchema","object","string","required","matches"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/4-guarantee/FormikHelper_guarantee.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewGuaranteeService,\r\n  updateGuaranteeService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== üìçinitialValues =====================\r\nexport const initialValues = {\r\n  id: \"\",\r\n  title: \"\",\r\n  descriptions: \"\",\r\n  length: \"\",\r\n  length_unit: \"\",\r\n};\r\n//====================== üìçonSubmit ===========================\r\nexport const onSubmit = async (\r\n  values,\r\n  actions,\r\n  setData,\r\n  guaranteeToEdit,\r\n  setGuaranteeToEdit,\r\n  lengthUnit\r\n) => {\r\n  if (guaranteeToEdit?.length) {\r\n    const newValues = {\r\n      ...values,\r\n      length_unit: lengthUnit,\r\n    };\r\n    const res = await updateGuaranteeService(newValues, guaranteeToEdit.id);\r\n    if (res.status == 200) {\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\r\n\r\n      setData((oldData) => {\r\n        let newData = [...oldData];\r\n        let index = oldData.findIndex((d) => d.id == guaranteeToEdit.id);\r\n        newData[index] = res.data.data;\r\n        return newData;\r\n      });\r\n      setGuaranteeToEdit(res.data.data);\r\n    }\r\n  } else {\r\n    const newValues = {\r\n      ...values,\r\n      length_unit: lengthUnit,\r\n    };\r\n\r\n    const res = await createNewGuaranteeService(newValues);\r\n\r\n    if (res.status == 201) {\r\n      setData((data) => [...data, res.data.data]);\r\n      swal(\"ÿ´ÿ®ÿ™ ÿ¥ÿØ!\", res.data.message, \"success\");\r\n      actions.resetForm();\r\n    }\r\n  }\r\n};\r\n\r\n//====================== üìçvalidationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  title: Yup.string()\r\n    .required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\")\r\n    .matches(/^[a-zA-Z0-9\\s@!%$?&]+$/, \"ŸÅŸÇÿ∑ ÿßÿ≤ ÿßÿπÿØÿßÿØ Ÿà ÿ≠ÿ±ŸàŸÅ ŸÑÿßÿ™€åŸÜ ÿßÿ≥ÿ™ŸÅÿßÿØŸá ÿ¥ŸàÿØ\"),\r\n\r\n  length: Yup.string(),\r\n  length_unit: Yup.string(),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SACEC,yBAAyB,EACzBC,sBAAsB,QACjB,wCAAwC;AAC/C,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE;AACf,CAAC;AACD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CACtBC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,UAAU,KACP;EACH,IAAIF,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEN,MAAM,EAAE;IAC3B,MAAMS,SAAS,GAAG;MAChB,GAAGN,MAAM;MACTF,WAAW,EAAEO;IACf,CAAC;IACD,MAAME,GAAG,GAAG,MAAMhB,sBAAsB,CAACe,SAAS,EAAEH,eAAe,CAACT,EAAE,CAAC;IACvE,IAAIa,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBhB,IAAI,CAAC,SAAS,EAAEe,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAE5CR,OAAO,CAAES,OAAO,IAAK;QACnB,IAAIC,OAAO,GAAG,CAAC,GAAGD,OAAO,CAAC;QAC1B,IAAIE,KAAK,GAAGF,OAAO,CAACG,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACrB,EAAE,IAAIS,eAAe,CAACT,EAAE,CAAC;QAChEkB,OAAO,CAACC,KAAK,CAAC,GAAGN,GAAG,CAACE,IAAI,CAACA,IAAI;QAC9B,OAAOG,OAAO;MAChB,CAAC,CAAC;MACFR,kBAAkB,CAACG,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;IACnC;EACF,CAAC,MAAM;IACL,MAAMH,SAAS,GAAG;MAChB,GAAGN,MAAM;MACTF,WAAW,EAAEO;IACf,CAAC;IAED,MAAME,GAAG,GAAG,MAAMjB,yBAAyB,CAACgB,SAAS,CAAC;IAEtD,IAAIC,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBN,OAAO,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;MAC3CjB,IAAI,CAAC,SAAS,EAAEe,GAAG,CAACE,IAAI,CAACC,OAAO,EAAE,SAAS,CAAC;MAC5CT,OAAO,CAACe,SAAS,CAAC,CAAC;IACrB;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG5B,GAAG,CAAC6B,MAAM,CAAC;EACzCvB,KAAK,EAAEN,GAAG,CAAC8B,MAAM,CAAC,CAAC,CAChBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,OAAO,CAAC,wBAAwB,EAAE,uCAAuC,CAAC;EAE7ExB,MAAM,EAAER,GAAG,CAAC8B,MAAM,CAAC,CAAC;EACpBrB,WAAW,EAAET,GAAG,CAAC8B,MAAM,CAAC;AAC1B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}