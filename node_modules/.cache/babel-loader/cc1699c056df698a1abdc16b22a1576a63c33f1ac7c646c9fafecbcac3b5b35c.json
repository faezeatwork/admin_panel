{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewAttributeService, updateAttributeService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n// ==============  üìçheader of table in add attributes ===================\nexport const headers_attributesTable = [{\n  field: \"id\",\n  title: \"id\"\n}, {\n  field: \"title\",\n  title: \"ÿπŸÜŸàÿßŸÜ ŸÖÿ≠ÿµŸàŸÑ\"\n}, {\n  field: \"unit\",\n  title: \"Ÿàÿßÿ≠ÿØ\"\n}, {\n  field: \"in_filter\",\n  title: \"ŸÜŸÖÿß€åÿ¥ ÿØÿ± ŸÅ€åŸÑÿ™ÿ±\"\n}];\n\n// ==============  üìçinitialValues add attributes ===================\nexport const initialValues = {\n  attributeTitle: \"\",\n  attributeUnit: \"\",\n  switchShowFilter: false\n};\n\n//================  üìçonSubmit add attributes ======================\nexport const onSubmit = async (values, actions, location, setAttData, setReInitialValues) => {\n  if (singleAttId != 0) {\n    console.log(\"singleAttId\");\n    values = {\n      ...values,\n      switchShowFilter: values.switchShowFilter ? 1 : 0\n    };\n    const res = await updateAttributeService(singleAttId, values);\n    try {\n      console.log(res);\n      if (res.status == 200) {\n        swal(\"\", res.data.message, \"success\");\n        setReInitialValues({\n          //...reInitialValues, //‚≠ê\n          attributeTitle: res.data.data.title,\n          attributeUnit: res.data.data.unit,\n          switchShowFilter: res.data.data.in_filter ? true : false\n        });\n        actions.resetForm();\n      }\n    } catch {}\n  } else if (singleAttId == 0) {\n    var _location$state;\n    console.log(singleAttId);\n    values = {\n      ...values,\n      switchShowFilter: values.switchShowFilter ? 1 : 0\n    };\n    const res = await createNewAttributeService((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.categoryId, values);\n    try {\n      console.log(res);\n      if (res.status == 201) {\n        swal(\"\", res.data.message, \"success\");\n        setAttData(oldData => [...oldData, res.data.data]); //ÿß€åŸÜ ÿÆÿ∑ ⁄Ü€å⁄©ÿßÿ± ŸÖ€å⁄©ŸÜŸáÿü ÿ¨ÿØŸàŸÑ Ÿà€å⁄ò⁄Ø€å Ÿáÿßÿ±Ÿà ÿ±ŸÜÿØÿ± ŸÖÿ¨ÿØÿØ ŸÖ€å⁄©ŸÜŸá üòÅ\n        actions.resetForm();\n      }\n    } catch {}\n  }\n};\n\n//===============  üìçvalidationSchema add attributes ===============\nexport const validationSchema = Yup.object({\n  attributeTitle: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\"),\n  attributeUnit: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\")\n});","map":{"version":3,"names":["Yup","createNewAttributeService","updateAttributeService","swal","headers_attributesTable","field","title","initialValues","attributeTitle","attributeUnit","switchShowFilter","onSubmit","values","actions","location","setAttData","setReInitialValues","singleAttId","console","log","res","status","data","message","unit","in_filter","resetForm","_location$state","state","categoryId","oldData","validationSchema","object","string","required"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/general_compo/attributes/FormikHelper_Attributes.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport {\r\n  createNewAttributeService,\r\n  updateAttributeService,\r\n} from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n// ==============  üìçheader of table in add attributes ===================\r\nexport const headers_attributesTable = [\r\n  { field: \"id\", title: \"id\" },\r\n  { field: \"title\", title: \"ÿπŸÜŸàÿßŸÜ ŸÖÿ≠ÿµŸàŸÑ\" },\r\n  { field: \"unit\", title: \"Ÿàÿßÿ≠ÿØ\" },\r\n  { field: \"in_filter\", title: \"ŸÜŸÖÿß€åÿ¥ ÿØÿ± ŸÅ€åŸÑÿ™ÿ±\" },\r\n];\r\n\r\n// ==============  üìçinitialValues add attributes ===================\r\nexport const initialValues = {\r\n  attributeTitle: \"\",\r\n  attributeUnit: \"\",\r\n  switchShowFilter: false,\r\n};\r\n\r\n//================  üìçonSubmit add attributes ======================\r\nexport const onSubmit = async (\r\n  values,\r\n  actions,\r\n  location,\r\n  setAttData,\r\n  setReInitialValues\r\n) => {\r\n  if (singleAttId != 0) {\r\n    console.log(\"singleAttId\");\r\n    values = {\r\n      ...values,\r\n      switchShowFilter: values.switchShowFilter ? 1 : 0,\r\n    };\r\n    const res = await updateAttributeService(singleAttId, values);\r\n    try {\r\n      console.log(res);\r\n      if (res.status == 200) {\r\n        swal(\"\", res.data.message, \"success\");\r\n        setReInitialValues({\r\n         //...reInitialValues, //‚≠ê\r\n          attributeTitle: res.data.data.title,\r\n          attributeUnit: res.data.data.unit,\r\n          switchShowFilter: res.data.data.in_filter ? true : false,\r\n        });\r\n        actions.resetForm();\r\n      }\r\n    } catch {}\r\n  } else if(singleAttId == 0) {\r\n    console.log(singleAttId);\r\n    values = {\r\n      ...values,\r\n      switchShowFilter: values.switchShowFilter ? 1 : 0,\r\n    };\r\n    const res = await createNewAttributeService(\r\n      location.state?.categoryId,\r\n      values\r\n    );\r\n    try {\r\n      console.log(res);\r\n      if (res.status == 201) {\r\n        swal(\"\", res.data.message, \"success\");\r\n        setAttData((oldData) => [...oldData, res.data.data]); //ÿß€åŸÜ ÿÆÿ∑ ⁄Ü€å⁄©ÿßÿ± ŸÖ€å⁄©ŸÜŸáÿü ÿ¨ÿØŸàŸÑ Ÿà€å⁄ò⁄Ø€å Ÿáÿßÿ±Ÿà ÿ±ŸÜÿØÿ± ŸÖÿ¨ÿØÿØ ŸÖ€å⁄©ŸÜŸá üòÅ\r\n        actions.resetForm();\r\n      }\r\n    } catch {}\r\n  }\r\n};\r\n\r\n//===============  üìçvalidationSchema add attributes ===============\r\nexport const validationSchema = Yup.object({\r\n  attributeTitle: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\"),\r\n  attributeUnit: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\"),\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}