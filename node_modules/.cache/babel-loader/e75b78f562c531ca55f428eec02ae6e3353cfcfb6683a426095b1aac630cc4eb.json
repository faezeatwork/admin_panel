{"ast":null,"code":"import React from \"react\";\nexport const MainPage_chart = () => {\n  const config = {\n    type: \"line\",\n    data: data,\n    options: {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        },\n        title: {\n          display: true,\n          text: \"Chart.js Line Chart\"\n        }\n      }\n    }\n  };\n  const DATA_COUNT = 7;\n  const NUMBER_CFG = {\n    count: DATA_COUNT,\n    min: -100,\n    max: 100\n  };\n  const labels = Utils.months({\n    count: 7\n  });\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: \"Dataset 1\",\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5)\n    }, {\n      label: \"Dataset 2\",\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5)\n    }]\n  };\n\n  // const actions = [\n  //   {\n  //     name: \"Randomize\",\n  //     handler(chart) {\n  //       chart.data.datasets.forEach((dataset) => {\n  //         dataset.data = Utils.numbers({\n  //           count: chart.data.labels.length,\n  //           min: -100,\n  //           max: 100,\n  //         });\n  //       });\n  //       chart.update();\n  //     },\n  //   },\n  //   {\n  //     name: \"Add Dataset\",\n  //     handler(chart) {\n  //       const data = chart.data;\n  //       const dsColor = Utils.namedColor(chart.data.datasets.length);\n  //       const newDataset = {\n  //         label: \"Dataset \" + (data.datasets.length + 1),\n  //         backgroundColor: Utils.transparentize(dsColor, 0.5),\n  //         borderColor: dsColor,\n  //         data: Utils.numbers({\n  //           count: data.labels.length,\n  //           min: -100,\n  //           max: 100,\n  //         }),\n  //       };\n  //       chart.data.datasets.push(newDataset);\n  //       chart.update();\n  //     },\n  //   },\n  //   {\n  //     name: \"Add Data\",\n  //     handler(chart) {\n  //       const data = chart.data;\n  //       if (data.datasets.length > 0) {\n  //         data.labels = Utils.months({ count: data.labels.length + 1 });\n\n  //         for (let index = 0; index < data.datasets.length; ++index) {\n  //           data.datasets[index].data.push(Utils.rand(-100, 100));\n  //         }\n\n  //         chart.update();\n  //       }\n  //     },\n  //   },\n  //   {\n  //     name: \"Remove Dataset\",\n  //     handler(chart) {\n  //       chart.data.datasets.pop();\n  //       chart.update();\n  //     },\n  //   },\n  //   {\n  //     name: \"Remove Data\",\n  //     handler(chart) {\n  //       chart.data.labels.splice(-1, 1); // remove the label first\n\n  //       chart.data.datasets.forEach((dataset) => {\n  //         dataset.data.pop();\n  //       });\n\n  //       chart.update();\n  //     },\n  //   },\n  // ];\n};\n_c = MainPage_chart;\nvar _c;\n$RefreshReg$(_c, \"MainPage_chart\");","map":{"version":3,"names":["React","MainPage_chart","config","type","data","options","responsive","plugins","legend","position","title","display","text","DATA_COUNT","NUMBER_CFG","count","min","max","labels","Utils","months","datasets","label","numbers","borderColor","CHART_COLORS","red","backgroundColor","transparentize","blue","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/alizadeh/admin_panel/src/components/pages/main_page/MainPage_chart.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const MainPage_chart = () => {\r\n  const config = {\r\n    type: \"line\",\r\n    data: data,\r\n    options: {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: \"Chart.js Line Chart\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const DATA_COUNT = 7;\r\n  const NUMBER_CFG = { count: DATA_COUNT, min: -100, max: 100 };\r\n\r\n  const labels = Utils.months({ count: 7 });\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Dataset 1\",\r\n        data: Utils.numbers(NUMBER_CFG),\r\n        borderColor: Utils.CHART_COLORS.red,\r\n        backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\r\n      },\r\n      {\r\n        label: \"Dataset 2\",\r\n        data: Utils.numbers(NUMBER_CFG),\r\n        borderColor: Utils.CHART_COLORS.blue,\r\n        backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\r\n      },\r\n    ],\r\n  };\r\n\r\n  // const actions = [\r\n  //   {\r\n  //     name: \"Randomize\",\r\n  //     handler(chart) {\r\n  //       chart.data.datasets.forEach((dataset) => {\r\n  //         dataset.data = Utils.numbers({\r\n  //           count: chart.data.labels.length,\r\n  //           min: -100,\r\n  //           max: 100,\r\n  //         });\r\n  //       });\r\n  //       chart.update();\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"Add Dataset\",\r\n  //     handler(chart) {\r\n  //       const data = chart.data;\r\n  //       const dsColor = Utils.namedColor(chart.data.datasets.length);\r\n  //       const newDataset = {\r\n  //         label: \"Dataset \" + (data.datasets.length + 1),\r\n  //         backgroundColor: Utils.transparentize(dsColor, 0.5),\r\n  //         borderColor: dsColor,\r\n  //         data: Utils.numbers({\r\n  //           count: data.labels.length,\r\n  //           min: -100,\r\n  //           max: 100,\r\n  //         }),\r\n  //       };\r\n  //       chart.data.datasets.push(newDataset);\r\n  //       chart.update();\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"Add Data\",\r\n  //     handler(chart) {\r\n  //       const data = chart.data;\r\n  //       if (data.datasets.length > 0) {\r\n  //         data.labels = Utils.months({ count: data.labels.length + 1 });\r\n\r\n  //         for (let index = 0; index < data.datasets.length; ++index) {\r\n  //           data.datasets[index].data.push(Utils.rand(-100, 100));\r\n  //         }\r\n\r\n  //         chart.update();\r\n  //       }\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"Remove Dataset\",\r\n  //     handler(chart) {\r\n  //       chart.data.datasets.pop();\r\n  //       chart.update();\r\n  //     },\r\n  //   },\r\n  //   {\r\n  //     name: \"Remove Data\",\r\n  //     handler(chart) {\r\n  //       chart.data.labels.splice(-1, 1); // remove the label first\r\n\r\n  //       chart.data.datasets.forEach((dataset) => {\r\n  //         dataset.data.pop();\r\n  //       });\r\n\r\n  //       chart.update();\r\n  //     },\r\n  //   },\r\n  // ];\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,MAAM,GAAG;IACbC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAEA,IAAI;IACVC,OAAO,EAAE;MACPC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,UAAU,GAAG;IAAEC,KAAK,EAAEF,UAAU;IAAEG,GAAG,EAAE,CAAC,GAAG;IAAEC,GAAG,EAAE;EAAI,CAAC;EAE7D,MAAMC,MAAM,GAAGC,KAAK,CAACC,MAAM,CAAC;IAAEL,KAAK,EAAE;EAAE,CAAC,CAAC;EACzC,MAAMX,IAAI,GAAG;IACXc,MAAM,EAAEA,MAAM;IACdG,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBlB,IAAI,EAAEe,KAAK,CAACI,OAAO,CAACT,UAAU,CAAC;MAC/BU,WAAW,EAAEL,KAAK,CAACM,YAAY,CAACC,GAAG;MACnCC,eAAe,EAAER,KAAK,CAACS,cAAc,CAACT,KAAK,CAACM,YAAY,CAACC,GAAG,EAAE,GAAG;IACnE,CAAC,EACD;MACEJ,KAAK,EAAE,WAAW;MAClBlB,IAAI,EAAEe,KAAK,CAACI,OAAO,CAACT,UAAU,CAAC;MAC/BU,WAAW,EAAEL,KAAK,CAACM,YAAY,CAACI,IAAI;MACpCF,eAAe,EAAER,KAAK,CAACS,cAAc,CAACT,KAAK,CAACM,YAAY,CAACI,IAAI,EAAE,GAAG;IACpE,CAAC;EAEL,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;AACF,CAAC;AAACC,EAAA,GA5GW7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}