{"ast":null,"code":"import * as Yup from \"yup\";\nimport { createNewBrandService } from \"../../../services/CRUD_categoryService\";\nimport swal from \"sweetalert\";\n\n//====================== üìçinitialValues =====================\nexport const initialValues = {\n  original_name: \"\",\n  persian_name: \"\",\n  descriptions: \"\",\n  logo: \"\"\n};\n\n//====================== üìçonSubmit ===========================\nexport const onSubmit = async (data, actions) => {\n  console.log(actions);\n  const res = await createNewBrandService(data);\n  try {\n    if (res.status == 201) {\n      swal(\"\", res.data.message.success);\n      resetForm();\n    }\n  } catch {}\n};\n\n//====================== üìçvalidationSchema ===================\nexport const validationSchema = Yup.object({\n  original_name: Yup.string().required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\").matches(/^[0-9A-Za-z]{1,}$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ÿßŸÜ⁄ØŸÑ€åÿ≥€å\"),\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ŸÅÿßÿ±ÿ≥€å\"),\n  descriptions: Yup.string().matches(/^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ Ÿà ÿßÿπÿØÿßÿØ ŸÖÿ¨ÿßÿ≤ŸÜÿØ\")\n});","map":{"version":3,"names":["Yup","createNewBrandService","swal","initialValues","original_name","persian_name","descriptions","logo","onSubmit","data","actions","console","log","res","status","message","success","resetForm","validationSchema","object","string","required","matches"],"sources":["C:/Users/f.alizadeh/Desktop/alizadeh/admin_panel/src/components/pages/brand/FormikHelper_brands.jsx"],"sourcesContent":["import * as Yup from \"yup\";\r\nimport { createNewBrandService } from \"../../../services/CRUD_categoryService\";\r\nimport swal from \"sweetalert\";\r\n\r\n//====================== üìçinitialValues =====================\r\nexport const initialValues = {\r\n  original_name: \"\",\r\n  persian_name: \"\",\r\n  descriptions: \"\",\r\n  logo: \"\",\r\n};\r\n\r\n//====================== üìçonSubmit ===========================\r\nexport const onSubmit = async (data, actions) => {\r\n  console.log(actions);\r\n  const res = await createNewBrandService(data);\r\n  try {\r\n    if (res.status == 201) {\r\n      swal(\"\", res.data.message.success);\r\n      resetForm();\r\n    }\r\n  } catch {}\r\n};\r\n\r\n//====================== üìçvalidationSchema ===================\r\nexport const validationSchema = Yup.object({\r\n  original_name: Yup.string()\r\n    .required(\"ŸÑÿ∑ŸÅÿß ÿß€åŸÜ ŸÇÿ≥ŸÖÿ™ ÿ±ÿß Ÿæÿ± ⁄©ŸÜ€åÿØ\")\r\n    .matches(/^[0-9A-Za-z]{1,}$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ÿßŸÜ⁄ØŸÑ€åÿ≥€å\"),\r\n  persian_name: Yup.string().matches(/^[\\u0600-\\u06FF\\s]+$/, \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ ŸÅÿßÿ±ÿ≥€å\"),\r\n  descriptions: Yup.string().matches(\r\n    /^[0-9A-Za-z\\u0600-\\u06FF\\s]+$/,\r\n    \"ŸÅŸÇÿ∑ ÿ≠ÿ±ŸàŸÅ Ÿà ÿßÿπÿØÿßÿØ ŸÖÿ¨ÿßÿ≤ŸÜÿØ\"\r\n  ),\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAASC,qBAAqB,QAAQ,wCAAwC;AAC9E,OAAOC,IAAI,MAAM,YAAY;;AAE7B;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,aAAa,EAAE,EAAE;EACjBC,YAAY,EAAE,EAAE;EAChBC,YAAY,EAAE,EAAE;EAChBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,OAAO,KAAK;EAC/CC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,MAAMG,GAAG,GAAG,MAAMZ,qBAAqB,CAACQ,IAAI,CAAC;EAC7C,IAAI;IACF,IAAII,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;MACrBZ,IAAI,CAAC,EAAE,EAAEW,GAAG,CAACJ,IAAI,CAACM,OAAO,CAACC,OAAO,CAAC;MAClCC,SAAS,CAAC,CAAC;IACb;EACF,CAAC,CAAC,MAAM,CAAC;AACX,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGlB,GAAG,CAACmB,MAAM,CAAC;EACzCf,aAAa,EAAEJ,GAAG,CAACoB,MAAM,CAAC,CAAC,CACxBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,OAAO,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;EACnDjB,YAAY,EAAEL,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACE,OAAO,CAAC,sBAAsB,EAAE,gBAAgB,CAAC;EAC5EhB,YAAY,EAAEN,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACE,OAAO,CAChC,+BAA+B,EAC/B,yBACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}